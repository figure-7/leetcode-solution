题目难度：MEDIUM

给你一个由 '('、')' 和小写字母组成的字符串 s。

你需要从字符串中删除最少数目的 '(' 或者 ')' （可以删除任意位置的括号)，使得剩下的「括号字符串」有效。

请返回任意一个合法字符串。

有效「括号字符串」应当符合以下 任意一条 要求：

空字符串或只包含小写字母的字符串
可以被写作 AB（A 连接 B）的字符串，其中 A 和 B 都是有效「括号字符串」
可以被写作 (A) 的字符串，其中 A 是一个有效的「括号字符串」
 

示例 1：

输入：s = "lee(t(c)o)de)"
输出："lee(t(c)o)de"
解释："lee(t(co)de)" , "lee(t(c)ode)" 也是一个可行答案。
示例 2：

输入：s = "a)b(c)d"
输出："ab(c)d"
示例 3：

输入：s = "))(("
输出：""
解释：空字符串也是有效的
示例 4：

输入：s = "(a(b(c)d)"
输出："a(b(c)d)"
 

提示：

1 <= s.length <= 10^5
s[i] 可能是 '('、')' 或英文小写字母

思路：先取看能有几个符合条件的左括号和右括号
遇见左括号直接加总值，遇见右括号看有没有左括号，有的话就左括号此时减一，总值不变
没有就不加，最后把多余的左括号总值减去害的左右括号数目一致
然后字符串从左边开始保留左括号，右边开始保留右括号即可
（我真是个傻子，这都没想到。。。）

上代码：
class Solution {
public:
    string minRemoveToMakeValid(string s) {
        int nl=0;
        int nr=0;
        int l=0;
        for(char c:s)
        {
            if(c=='(') nl++,l++;
            else if(c==')')
            {
                if(nl) nl--;
                else nr++;
            }
        }
        l-=nl;
        string ans;
        for(char c:s)
        {
            if(c=='(')
            {
                if(l)
                {
                    l--;
                    ans+='(';
                }
            }
            else if(c==')')
            {
                if(nr) nr--;
                else ans+=')';
            }
            else
                ans+=c;
        }
        return ans;
    }
};