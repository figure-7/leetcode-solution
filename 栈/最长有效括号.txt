题目难度：HARD

给定一个只包含 '('?和 ')'?的字符串，找出最长的包含有效括号的子串的长度。



示例?1:

输入: "(()"

输出: 2

解释: 最长有效括号子串为 "()"


示例 2:

输入: ")()())"

输出: 4

解释: 最长有效括号子串为 "()()"



思路：利用栈+三指针的方法，一个指针保存当栈为空的时候，也就是多出了‘）’这样的话后面子串一定是从这个位置的后面开始的
例如（））（），当遇到第二个‘（’时，子串长度被第二个")"分割了
第二个指针是栈顶元素的值，即对应"("的下标
另一个指针就是用来遍历的下标，便于与另外两个指针相减判断最大长度
最后返回最大值即可

执行用时 :
8 ms
, 在所有 C++ 提交中击败了
80.15%
的用户
内存消耗 :
9.3 MB
, 在所有 C++ 提交中击败了
93.26%
的用户

上代码：（此题还有一种空间复杂度更低的算法见书）
class Solution {
public:
    int longestValidParentheses(string s) {
        int max_len= 0, last = -1;
        stack<int> lefts;
        for(int i = 0; i < s.size(); i++) {
            if(s[i] == '(') lefts.push(i);
            else {
                if(lefts.empty()) last = i;
                else {
                    lefts.pop();
                    if(lefts.empty()) {
                        max_len = max(max_len, i-last);
                    } else {
                        max_len = max(max_len, i-lefts.top());
                    }
                }
            }
        }
        return max_len;
    }
};