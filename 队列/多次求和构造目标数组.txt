题目难度：HARD

给你一个整数数组 target 。一开始，你有一个数组 A ，它的所有元素均为 1 ，你可以执行以下操作：

令 x 为你数组里所有元素的和
选择满足 0 <= i < target.size 的任意下标 i ，并让 A 数组里下标为 i 处的值为 x 。
你可以重复该过程任意次
如果能从 A 开始构造出目标数组 target ，请你返回 True ，否则返回 False 。

 

示例 1：

输入：target = [9,3,5]
输出：true
解释：从 [1, 1, 1] 开始
[1, 1, 1], 和为 3 ，选择下标 1
[1, 3, 1], 和为 5， 选择下标 2
[1, 3, 5], 和为 9， 选择下标 0
[9, 3, 5] 完成
示例 2：

输入：target = [1,1,1,2]
输出：false
解释：不可能从 [1,1,1,1] 出发构造目标数组。
示例 3：

输入：target = [8,5]
输出：true
 

提示：

N == target.length
1 <= target.length <= 5 * 10^4
1 <= target[i] <= 10^9

思路：周赛第四题，队列
逆序思考，先把数组值放入优先队列
然后不断计算最大的（因为肯定是最后一步的结果），取遍历到上一步
直到看最后（看数组和是否大于数组长度）能否实现值都为一的数组，能够就返回true，否则返回false即可

上代码：
class Solution {
public:
    priority_queue<long long> que;
    bool isPossible(vector<int>& target) {
        int n = target.size();
        long long sum = 0;
        
        while(!que.empty()) que.pop();
        for (auto v: target) que.push(v), sum += v;
        
        while(sum > n){
            long long cur = que.top(); que.pop();
            long long rest = sum - cur;
            long long pre = cur - rest;
            if (rest < 1 || pre < 1) return false;
            sum = cur;
            que.push(pre);
        }
        
        return true;
    }
};