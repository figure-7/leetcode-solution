题目难度：MEDIUM

给定一个链表，两两交换其中相邻的节点，并返回交换后的链表。

你不能只是单纯的改变节点内部的值，而是需要实际的进行节点交换。

 

示例:

给定 1->2->3->4, 你应该返回 2->1->4->3.

思路：链表
还是做得少，没导出来，太乱了，具体思路见注释
（我应该就是没用哨兵）

执行用时 :
4 ms
, 在所有 cpp 提交中击败了
86.44%
的用户
内存消耗 :
8.5 MB
, 在所有 cpp 提交中击败了
92.83%
的用户

上代码：
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* swapPairs(ListNode* head) {
        ListNode* first=new ListNode(0); //加一个哨兵节点
        first->next=head;
        ListNode* p1=first; //p1为需交换的节点前面一个节点
        ListNode* p2; //将节点p2与p2->next交换。这样不需要额外记录交换节点之前的节点。
        while(p1->next!=NULL&&p1->next->next!=NULL)
        {
            p2=p1->next;
            p1->next=p2->next;
            p2->next=p2->next->next;
            p1->next->next=p2;
            p1=p2; //更新p1
        }
        return first->next;
    }
};