题目难度：MEDIUM

思路：

给出集合?[1,2,3,…,n]，其所有元素共有?n! 种排列。


按大小顺序列出所有排列情况，并一一标记，

当?n = 3 时, 所有排列如下：

"123"
"132"
"213"
"231"
"312"
"321"

给定?n 和?k，返回第?k?个排列。



说明：

给定 n?的范围是 [1, 9]。
给定 k?的范围是[1, ?n!]。


示例 1:

输入: n = 3, k = 3
输出: "213"
示例 2:

输入: n = 4, k = 9
输出: "2314"

思路：跟之前一样，DFS + BackTracking，只不过不用去重了，剪枝即可
（但是我看了原题和这个不一样啊~~~~“做错题了打扰了”   这个是返回字符串类型，二维数组转字符串......绕死）

执行用时 :
8 ms
, 在所有C++提交中击败了
82.37%
的用户
内存消耗 :
8.4 MB
, 在所有C++提交中击败了
68.28%
的用户

上代码：
class Solution {
public:
    string getPermutation(int n, int k) {
    string res;
    vector<int> str;
    for(int i=1;i<=n;++i){
        str.push_back(i);
    }
    
    dfs(res,str,n,k);
    
    return res;   
}

void dfs(string& res, vector<int>& str,int n,int k){
    
    if(str.empty()) return;
    int step=jiecheng(n-1),count=0,s=step;
    while(k>s){
        s+=step;
        ++count;
    }
 
    res+=to_string(str[count]);
    str.erase(str.begin()+count);
    dfs(res,str,n-1,k-count*step);
    
    
}
    int jiecheng(int n){ if(n<=1) return 1; return n* jiecheng(n-1); }
};