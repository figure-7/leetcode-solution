题目难度：MEDIUM

编写一个 SQL 查询来实现分数排名。

如果两个分数相同，则两个分数排名（Rank）相同。

请注意，平分后的下一个名次应该是下一个连续的整数值。

换句话说，名次之间不应该有“间隔”。

+----+-------+
| Id | Score |
+----+-------+
| 1  | 3.50  |
| 2  | 3.65  |
| 3  | 4.00  |
| 4  | 3.85  |
| 5  | 4.00  |
| 6  | 3.65  |
+----+-------+
例如，根据上述给定的 Scores 表，你的查询应该返回（按分数从高到低排列）：

+-------+------+
| Score | Rank |
+-------+------+
| 4.00  | 1    |
| 4.00  | 1    |
| 3.85  | 2    |
| 3.65  | 3    |
| 3.65  | 3    |
| 3.50  | 4    |
+-------+------+
重要提示：对于 MySQL 解决方案，如果要转义用作列名的保留字，可以在关键字之前和之后使用撇号。

例如 `Rank`

思路：数据库
接下来上题解区题解：
由于Rank为关键字,所以必须 
被oracle买了之后,终于出了开窗函数,分析函数.
照着oracle抄,爽歪歪😂

执行用时 :
223 ms
, 在所有 MySQL 提交中击败了
82.04%
的用户
内存消耗 :
0B
, 在所有 MySQL 提交中击败了
100.00%
的用户
（时间不错，空间完杀！）

上代码：
# Write your MySQL query statement below
select Score, dense_rank() over (order by Score desc)  as `Rank` from Scores;