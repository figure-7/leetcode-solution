题目难度：MEDIUM
一个机器人位于一个 m x n 网格的左上角 （起始点在下图中标记为“Start” ）。

机器人每次只能向下或者向右移动一步。机器人试图达到网格的右下角（在下图中标记为“Finish”）。

问总共有多少条不同的路径？



例如，上图是一个7 x 3 的网格。有多少可能的路径？

说明：m 和 n 的值均不超过 100。

示例 1:

输入: m = 3, n = 2
输出: 3
解释:
从左上角开始，总共有 3 条路径可以到达右下角。
1. 向右 -> 向右 -> 向下
2. 向右 -> 向下 -> 向右
3. 向下 -> 向右 -> 向右
示例 2:

输入: m = 7, n = 3
输出: 28

思路：典型dp，dp[i][j] = dp[i-1][j] +dp[i][j-1];
其中dp[i][0]和dp[0][j]为1，动态规划即可，
（第一次递归超时了，实际上使水题）

执行用时 : 8 ms, 在Unique Paths的C++提交中击败了80.32% 的用户
内存消耗 : 8.9 MB, 在Unique Paths的C++提交中击败了5.14% 的用户

代码：
class Solution{
public:
    int uniquePaths(int m, int n){
        if (m == 0 || n == 0) return 0;
        if (m == 1 || n == 1) return 1;
        vector<vector<int>> route(m, vector<int>(n, 1));
        for (int i = 1; i < m; i++)
            for (int j = 1; j < n; j++) 
                route[i][j] = route[i - 1][j] + route[i][j - 1];
        return route[m - 1][n - 1];
    }
};