题目难度：MEDIUM

在第一行我们写上一个 0。接下来的每一行，将前一行中的0替换为01，1替换为10。

给定行数 N 和序数 K，返回第 N 行中第 K个字符。（K从1开始）


例子:

输入: N = 1, K = 1
输出: 0

输入: N = 2, K = 1
输出: 0

输入: N = 2, K = 2
输出: 1

输入: N = 4, K = 5
输出: 1

解释:
第一行: 0
第二行: 01
第三行: 0110
第四行: 01101001

注意：

N 的范围 [1, 30].
K 的范围 [1, 2^(N-1)].

思路：dp
递归形式，思路见下（别人的）：
//附图
//序号
//              1
//          /        \   
//      1                2
//    /   \            /    \
//  1       2        3       4
// / \     /  \     /  \    / \ 
//1   2   3    4   5    6  7   8

//01排列
//              0
//          /        \   
//      0                1
//    /   \            /    \
//  0       1        1       0
// / \     /  \     /  \    / \ 
//0   1   1    0   1    0  0   1
具体见注释

上代码：
class Solution {
public:
    int kthGrammar(int N, int K) {
        if(N==1 && K==1)
            return 0;
        int a=kthGrammar(N-1,(K+1)/2);  //求父结点的值；(K+1)/2为父结点的序号
        int b=-(a-1);   //若a=0则b=1,若a=1则b=0
        if(K%2==1)
            return a;   //K为奇数则其值与父结点相同
        else
            return b;
    }
};