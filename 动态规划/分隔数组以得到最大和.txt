题目难度：MEDIUM

给出整数数组 A，将该数组分隔为长度最多为 K 的几个（连续）子数组。

分隔完成后，每个子数组的中的值都会变为该子数组中的最大值。

返回给定数组完成分隔后的最大和。

 

示例：

输入：A = [1,15,7,9,2,5,10], K = 3
输出：84
解释：A 变为 [15,15,15,9,10,10,10]
 

提示：

1 <= K <= A.length <= 500
0 <= A[i] <= 10^6

思路：DP
接下来上题解区题解：
dp[i]表示A[0]...A[i]的最大和

执行用时 :
32 ms
, 在所有 C++ 提交中击败了
37.74%
的用户
内存消耗 :
10.8 MB
, 在所有 C++ 提交中击败了
13.95%
的用户
（时空都不咋地）

上代码：
class Solution {
public:
    int maxSumAfterPartitioning(vector<int>& A, int K) {
        int dp[505]={0};  //dp[i]表示A[0]...A[i]的最大和，一定要手动初始化为0
        int n=A.size(),maxtmp;
        for(int i=0;i<n;i++)
        {
            maxtmp=A[i];
            for(int len=1;len<=K && i-len+1>=0;len++) //找i前面最近的len个数字中的最大值
            {
                //A[i-len+1]...A[i]
                maxtmp=max(maxtmp,A[i-len+1]);  //随着len值的增加，每次向左扩充一位
                //i-len+1前面一位是i-len
                if(i-len>=0)
                    dp[i]=max(dp[i],dp[i-len]+maxtmp*len);
                else
                    dp[i]=max(dp[i],maxtmp*len);   //最近的len位都被替换成maxtmp的值，这样结果最大
            }
        }
        return dp[n-1];
    }
};