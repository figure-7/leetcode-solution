题目难度：MEDIUM

给出一个字符串 s（仅含有小写英文字母和括号）。

请你按照从括号内到外的顺序，逐层反转每对匹配括号中的字符串，并返回最终的结果。

注意，您的结果中 不应 包含任何括号。

 

示例 1：

输入：s = "(abcd)"
输出："dcba"
示例 2：

输入：s = "(u(love)i)"
输出："iloveu"
示例 3：

输入：s = "(ed(et(oc))el)"
输出："leetcode"
示例 4：

输入：s = "a(bcdefghijkl(mno)p)q"
输出："apmnolkjihgfedcbq"
 

提示：

0 <= s.length <= 2000
s 中只有小写英文字母和括号
我们确保所有括号都是成对出现的

思路：最开始用栈和队列做，用来保存顺序，结果漏了一种情况，就是含多重非嵌套的括号形式，失败！
看到一种新的数据结构vector，只要通过遇见括号就记录一下翻转一次的子串，然后出顶部元素，插入得到的翻转过得元素
遍历即可，挺好的想法。

上代码：
class Solution {
public:
    string reverseParentheses(string s) {
        vector<string> v(1);
        for (auto c : s)
        {
            if (c == '(')
            {
                v.push_back("");
            }
            else if (c == ')')
            {
                auto t = v.back();
                reverse(t.begin(), t.end());
                v.pop_back();
                v.back() += t;
                cout<<v.back();
            }
            else
                v.back() += c;
        }
        return v[0];
    }
};