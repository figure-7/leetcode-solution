题目难度：EASY

给你一份『词汇表』（字符串数组） words 和一张『字母表』（字符串） chars。

假如你可以用 chars 中的『字母』（字符）拼写出 words 中的某个『单词』（字符串），那么我们就认为你掌握了这个单词。

注意：每次拼写时，chars 中的每个字母都只能用一次。

返回词汇表 words 中你掌握的所有单词的 长度之和。

 

示例 1：

输入：words = ["cat","bt","hat","tree"], chars = "atach"
输出：6
解释： 
可以形成字符串 "cat" 和 "hat"，所以答案是 3 + 3 = 6。
示例 2：

输入：words = ["hello","world","leetcode"], chars = "welldonehoneyr"
输出：10
解释：
可以形成字符串 "hello" 和 "world"，所以答案是 5 + 5 = 10。
 

提示：

1 <= words.length <= 1000
1 <= words[i].length, chars.length <= 100
所有字符串中都仅包含小写英文字母

思路：其实感觉思路没问题，就是用的局部变量新字符串做复制调用，然后挨个删除即可，不知道什么毛病，一对大数据结果少了，一堆数也不知道错在哪里，，，
直接看别人的同理，只不过是用哈希表剩下思路同

上代码：
class Solution {
public:
    int countCharacters(vector<string>& words, string chars) {
        map<char, int> charMap;
        for (int i=0; i<chars.size(); i++) {
            charMap[chars[i]]++;
        }
        int ret = 0;
        for (int i=0; i<words.size(); i++) {
            map<char, int> tmp = charMap;
            bool find = true;
            for (int j=0; j<words[i].size(); j++) {
                if (tmp[words[i][j]] == 0) {
                    find = false;
                    break;
                } else {
                    tmp[words[i][j]]--;
                }
            }
            if (find) {
                ret += words[i].size();
            }
        }
        return ret;
    }
};