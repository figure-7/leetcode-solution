题目难度：EASY

对于字符串 S 和 T，只有在 S = T + ... + T（T 与自身连接 1 次或多次）时，我们才认定 “T 能除尽 S”。

返回字符串 X，要求满足 X 能除尽 str1 且 X 能除尽 str2。

 

示例 1：

输入：str1 = "ABCABC", str2 = "ABC"
输出："ABC"
示例 2：

输入：str1 = "ABABAB", str2 = "ABAB"
输出："AB"
示例 3：

输入：str1 = "LEET", str2 = "CODE"
输出：""
 

提示：

1 <= str1.length <= 1000
1 <= str2.length <= 1000
str1[i] 和 str2[i] 为大写英文字母

思路：一开始没注意是最大的公约数，结果做了一个求最小公约数的......审题错误
主要方法就是先取两字符串的长度的最大公约数，然后分别对最大公约数长度的str2与str1和str2作比较
看是否是二者的子串（不是很难，太蠢了）
（这里用了一个gcd函数，可以对两个数字求最大公约数）

上代码：
class Solution {
public:
  bool isMatch(string s1, string s2) {
    for (int i = 0; i < s1.size(); i++) {
      if (s1[i] != s2[i%s2.size()]) return false;
    }
    return true;
  }
  string gcdOfStrings(string str1, string str2) {
    int l1 = str1.size();
    int l2 = str2.size();
    int l3 = gcd(l1, l2);                               //取长度间最大公约数
    string str3 = str1.substr(0, l3);
    if (isMatch(str1, str3) && isMatch(str2, str3)) return str3;
    return "";
  }
};