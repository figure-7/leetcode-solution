题目难度：MEDIUM
在一个仓库里，有一排条形码，其中第 i 个条形码为 barcodes[i]。

请你重新排列这些条形码，使其中两个相邻的条形码 不能 相等。 你可以返回任何满足该要求的答案，此题保证存在答案。

 

示例 1：

输入：[1,1,1,2,2,2]
输出：[2,1,2,1,2,1]
示例 2：

输入：[1,1,1,1,2,2,3,3]
输出：[1,3,1,3,2,1,2,1]
 

提示：

1 <= barcodes.length <= 10000
1 <= barcodes[i] <= 10000

我的思路是一次从前往后遍历，线路前面几个重复的，然后与后面的把偶数下标的值互换，
最后用reverse再来一次（不用全遍历，因为只剩下一个会相邻且重复的，即第一个数字）还是偶数下标分割即可
下面是别人的代码
（别问为啥不会，问就是没时间！确信）

代码;
class Solution {
public:
  vector<int> rearrangeBarcodes(vector<int>& B) {
    int N = B.size();
    sort(B.begin(), B.end());
    vector<int> cnt(10001);
    for (auto &b: B) cnt[b]++;
    int mB = max_element(cnt.begin(), cnt.end()) - cnt.begin();
    B.erase(remove(B.begin(), B.end(), mB), B.end());
    int L = 0;
    vector<int>  tmp(N);
    for (int S = 0; S < 2; S++) {
      for (int i = S; i < N; i+=2) {
        if (cnt[mB]) tmp[i] = mB, cnt[mB]--;
        else tmp[i] = B[L++]; 
      }
    }
    return tmp;
  }
};