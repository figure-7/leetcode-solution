题目难度：MEDIUM

给你一棵以节点 0 为根节点的树，定义如下：

节点的总数为?nodes?个；

第?i 个节点的值为?value[i]?；

第?i 个节点的父节点是?parent[i]?。

请你删除节点值之和为 0 的每一棵子树。


在完成所有删除之后，返回树中剩余节点的数目。

?



示例：



输入：nodes = 7, parent = [-1,0,0,1,2,2,2], value = [1,-2,4,0,-2,-1,-1]

输出：2
?


提示：

1 <= nodes <= 10^4
-10^5 <= value[i] <= 10^5	
parent.length == nodes
	parent[0] == -1?表示节点 0 是树的根。



思路：实际想到了，但是没有时间了，一题浪费了太多时间，还看了一会四题
就是先设立一个数组count，针对每个节点初始化为1，然后进行一次遍历
初始化一个ans等于总结点数，遍历时从后向前遍历，针对每一个结点的value，值为0就用ans对应的count数
否则就把父亲的value加上该节点的值，并且父亲节点加上当前节点的count数（当前节点已经连接了几个节点）
遍历结束，返回ans即可

上代码：
class Solution {
public:
    int deleteTreeNodes(int nodes, vector<int>& parent, vector<int>& value) {
        if(nodes==1) return value[0]==0?0:1;
        int ans=nodes;
        map<int,int> count;
        for(int i=0;i<parent.size();i++){
            count[i]=1;
        }
        for(int i=parent.size()-1;i>0;i--){
            if(value[i]==0) ans-=count[i];
            else{
                value[parent[i]]+=value[i];
                count[parent[i]]+=count[i];
            }
        }
        if(value[0]==0) return 0;
        return ans;
    }
};