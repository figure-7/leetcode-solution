题目难度：MEDIUM

爱丽丝有一手（hand）由整数数组给定的牌。?


现在她想把牌重新排列成组，使得每个组的大小都是 W，且由 W 张连续的牌组成。
如果她可以完成分组就返回 true，否则返回 false。

?



示例 1：

输入：hand = [1,2,3,6,2,3,4,7,8], W = 3
输出：true


解释：爱丽丝的手牌可以被重新排列为 [1,2,3]，[2,3,4]，[6,7,8]。


示例 2：

输入：hand = [1,2,3,4,5], W = 4
输出：false


解释：爱丽丝的手牌无法被重新排列成几个大小为 4 的组。
?



提示：


1 <= hand.length <= 10000

0 <= hand[i]?<= 10^9

1 <= W <= hand.length

思路：先看数组长度，如果小于分组数或者无法整除分组数则返回false
然后设置一个新数组，将原数组每个数值余以分组数的值作为新数组下标，将下标对应值新数组值加一
如果新数组各个值相等就返回true（每个余数数量都相同，即可以连成顺子），否则返回false

（这题编译器有问题，java的过了，C++测试与提交不一致......）
上代码：

class Solution {
public:
    bool isNStraightHand(vector<int>& hand, int W) {
        if(hand.size() % W != 0)
            return false;
        int arr[10001];
        for (int i = 0; i < hand.size(); i++) {
            arr[hand[i] % W]++;
        }
        for(int j = 0; j < W - 1; j++) { 
            //若是顺子，array的每一元素理应是相等的
            if(arr[j] != arr[j+1])
                return false;
        }
        return true;
    }
};