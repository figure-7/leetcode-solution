题目难度：MEDIUM

给你一个 m * n 的整数矩阵 mat ，请你将同一条对角线上的元素（从左上到右下）按升序排序后，返回排好序的矩阵。

 

示例 1：



输入：mat = [[3,3,1,1],[2,2,1,2],[1,1,1,2]]
输出：[[1,1,1,1],[1,2,2,2],[1,2,3,3]]
 

提示：

m == mat.length
n == mat[i].length
1 <= m, n <= 100
1 <= mat[i][j] <= 100

思路：周赛第三题，模拟
（这题有BUG，不说啥了。。。执行提交不一致）
直接按每个对角线遍历保存进数组中，然后排序再有小到大赋值给对角线位置
最后返回原数组即可

上代码：
class Solution {
public:
    vector<vector<int>> diagonalSort(vector<vector<int>>& mat) {
        int n = mat.size(), m = mat[0].size();
        
        for (int i = 0; i < n; i++){
            for (int j = 0; j < m; j++){
                if (i > 0 && j > 0) continue;
                
                int x = i, y = j, c = 0;
                vector<int> cur;
                while(x < n && y < m){
                    cur.push_back(mat[x][y]);
                    x++; y++;
                }
                
                sort(cur.begin(), cur.end());
                
                x = i; y = j;
                while(x < n && y < m){
                    mat[x][y] = cur[c++];
                    x++; y++;
                }
                
            }
        }
        
        return mat;
    }
};