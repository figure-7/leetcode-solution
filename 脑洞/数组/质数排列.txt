题目难度：EASY

请你帮忙给从 1 到 n 的数设计排列方案，使得所有的「质数」都应该被放在「质数索引」（索引从 1 开始）上；你需要返回可能的方案总数。

让我们一起来回顾一下「质数」：质数一定是大于 1 的，并且不能用两个小于它的正整数的乘积来表示。

由于答案可能会很大，所以请你返回答案 模 mod 10^9 + 7 之后的结果即可。

 

示例 1：

输入：n = 5
输出：12
解释：举个例子，[1,2,5,4,3] 是一个有效的排列，但 [5,2,3,4,1] 不是，因为在第二种情况里质数 5 被错误地放在索引为 1 的位置上。
示例 2：

输入：n = 100
输出：682289015
 

提示：

1 <= n <= 100

思路：其实没什么，但是不知道怎么到后面大数据只要是n为质数就错了，没过太菜了
先求质数个数，然后分别对质数和不是质数的求阶乘

上代码：
class Solution {
public:
    int numPrimeArrangements(int n) {
        int f[105],p[105],m=0,i,j;
        bool b[105];
        for(i=f[0]=1;i<=n;i++)f[i]=(long long)f[i-1]*i%1000000007;
        memset(b,0,sizeof(b));
        for(i=2;i<=n;i++)
        {
            if(!b[i])p[m++]=i;
            for(j=0;j<m&&i*p[j]<=n;j++)
            {
                b[i*p[j]]=1;
                if(i%p[j]==0)break;
            }
        }
        i=(long long)f[m]*f[n-m]%1000000007;
        return i;
    }
};