题目难度：EASY

给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。
找出那个只出现了一次的元素。

说明：

你的算法应该具有线性时间复杂度。 
你可以不使用额外空间来实现吗？



示例 1:

输入: [2,2,1]

输出: 1


示例?2:

输入: [4,1,2,1,2]
输出: 4



思路：异或，不仅能处理两次的情况，只要出现偶数次，都可以清零

上代码：
class Solution {
public:
    int singleNumber(vector<int>& nums) {
        int x = 0;
        for(int i = 0; i < nums.size(); i++)
            x ^= nums[i];
        return x;
    }
};