题目难度：HARD

给定一个整数数组 A，找出索引为 (i, j, k) 的三元组，使得：

0 <= i < A.length
0 <= j < A.length
0 <= k < A.length
A[i] & A[j] & A[k] == 0，其中 & 表示按位与（AND）操作符。
 

示例：

输入：[2,1,3]
输出：12
解释：我们可以选出如下 i, j, k 三元组：
(i=0, j=0, k=1) : 2 & 2 & 1
(i=0, j=1, k=0) : 2 & 1 & 2
(i=0, j=1, k=1) : 2 & 1 & 1
(i=0, j=1, k=2) : 2 & 1 & 3
(i=0, j=2, k=1) : 2 & 3 & 1
(i=1, j=0, k=0) : 1 & 2 & 2
(i=1, j=0, k=1) : 1 & 2 & 1
(i=1, j=0, k=2) : 1 & 2 & 3
(i=1, j=1, k=0) : 1 & 1 & 2
(i=1, j=2, k=0) : 1 & 3 & 2
(i=2, j=0, k=1) : 3 & 2 & 1
(i=2, j=1, k=0) : 3 & 1 & 2
 

提示：

1 <= A.length <= 1000
0 <= A[i] < 2^16

思路：前缀和
接下来上题解区题解：
高维前缀和处理出来，之后枚举前两个，最后一个直接从高维前缀和里面取出来

执行用时 :
40 ms
, 在所有 C++ 提交中击败了
85.26%
的用户
内存消耗 :
8.8 MB
, 在所有 C++ 提交中击败了
81.82%
的用户
（时空都不错）

上代码：
class Solution {
public:
	int w = 0;
	int N, B[1 << 16];

	int countTriplets(vector<int>& A) {
		N = A.size();
		for (auto a : A)
		{
			B[a]++;
			while ((1 << w) <= a)w++;
		}

		for (int i = 0; i<w; i++) {
			for (int j = 0; j<(1 << w); j++) {
				if (j&(1 << i)) B[j] += B[j ^ (1 << i)];
			}
		}

		int ans = 0;
		int mask = (1 << w) - 1;
		for (int i = 0; i < N; i++)
			for (int j = 0; j <= i; j++)
				ans += B[~(A[i] & A[j])&mask] << (i != j);
		return ans;
	}
};