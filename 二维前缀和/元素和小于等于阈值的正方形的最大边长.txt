题目难度：MEDIUM

给你一个大小为 m x n 的矩阵 mat 和一个整数阈值 threshold。

请你返回元素总和小于或等于阈值的正方形区域的最大边长；如果没有这样的正方形区域，则返回 0 。
 

示例 1：



输入：mat = [[1,1,3,2,4,3,2],[1,1,3,2,4,3,2],[1,1,3,2,4,3,2]], threshold = 4
输出：2
解释：总和小于 4 的正方形的最大边长为 2，如图所示。
示例 2：

输入：mat = [[2,2,2,2,2],[2,2,2,2,2],[2,2,2,2,2],[2,2,2,2,2],[2,2,2,2,2]], threshold = 1
输出：0
示例 3：

输入：mat = [[1,1,1,1],[1,0,0,0],[1,0,0,0],[1,0,0,0]], threshold = 6
输出：3
示例 4：

输入：mat = [[18,70],[61,1],[25,85],[14,40],[11,96],[97,96],[63,45]], threshold = 40184
输出：2
 

提示：

1 <= m, n <= 300
m == mat.length
n == mat[i].length
0 <= mat[i][j] <= 10000
0 <= threshold <= 10^5

思路：周赛第三题，显示考虑递归的BFS搜索，结果发现无法中间判断保存结果，后来改为队列，还是没做出来。。。
利用二维前缀和来解
先将原数组值复制到一个新数组中，然后针对每个对应下标位置的前置的矩阵求和（三遍二重循环）
然后先枚举边长，然后二维枚举矩阵的左上角在哪里，利用差值（get函数：右下角加上左上角减去左边减去上边即可）计算出对应的矩阵和
直至结束取最小值即可

上代码：
int sum[350][350];
class Solution {
public:
    int get(int x, int y, int l){
        int x0 = x + l - 1, y0 = y + l -1;
        return sum[x0][y0] - sum[x - 1][y0] - sum[x0][y - 1] + sum[x - 1][y - 1];
    }
    
    int maxSideLength(vector<vector<int>>& mat, int threshold) {
        int n = mat.size(), m = mat[0].size();
        
        memset(sum, 0, sizeof(sum));
        for (int i = 1; i <= n; i++)
            for (int j = 1; j <= m; j++)
                sum[i][j] = mat[i - 1][j - 1];
        for (int i = 1; i <= n; i++)
            for (int j = 1; j <= m; j++)
                sum[i][j] += sum[i][j - 1];
        for (int i = 1; i <= n; i++)
            for (int j = 1; j <= m; j++)
                sum[i][j] += sum[i - 1][j];
        
        for (int l = min(n, m); l >= 1; l--){
            for (int i = 1; i + l - 1 <= n; i++){
                for (int j = 1; j + l - 1 <= m; j++){
                    if (get(i, j, l) <= threshold) return l;
                }
            }
        }
        return 0;
    }
};