题目难度：MEDIUM

给定一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得 a + b + c = 0 ？找出所有满足条件且不重复的三元组。

注意：答案中不可以包含重复的三元组。

例如, 给定数组 nums = [-1, 0, 1, 2, -1, -4]，

满足要求的三元组集合为：
[
  [-1, 0, 1],
  [-1, -1, 2]
]

思路：先对给定数组排序
用三个指针，i从头至size-3，k从size-1开始，j从i+1开始
算三个指针对应下标数值之和，小了j++,大了k--
在进行相同值以及过界的剪枝即可

我的提交执行用时
已经战胜 15.99 % 的 cpp 提交记录

上代码：
class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> ret;
        if(nums.size()<=2)
            return ret;
        sort(nums.begin(), nums.end());          //对数字内数值进行排序
        for(int i=0; i<nums.size()-2; i++) {
            int j=i+1;
            int k=nums.size()-1;
            while(j<k) {
                vector<int> curr;
                if(nums[i]+nums[j]+nums[k]<0) {
                    j++;
                }
                else if(nums[i]+nums[j]+nums[k]>0) {
                    k--;
                }
                else {
                    curr.push_back(nums[i]);
                    curr.push_back(nums[j]);
                    curr.push_back(nums[k]);
                    ret.push_back(curr);
                    j++;
                    k--;
                    while(j<k && nums[j]==nums[j-1]) {
                        j++;
                    }
                    while(j<k && nums[k+1]==nums[k]) {
                        k--;
                    }
                }
            }
            while(i<nums.size()-1 && nums[i]==nums[i+1]) {
                i++;
            }
        }
        return ret;
    }
};