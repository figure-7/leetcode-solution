题目难度：MEDIUM

一个 「开心字符串」定义为：

仅包含小写字母 ['a', 'b', 'c'].
对所有在 1 到 s.length - 1 之间的 i ，满足 s[i] != s[i + 1] （字符串的下标从 1 开始）。
比方说，字符串 "abc"，"ac"，"b" 和 "abcbabcbcb" 都是开心字符串，但是 "aa"，"baa" 和 "ababbc" 都不是开心字符串。

给你两个整数 n 和 k ，你需要将长度为 n 的所有开心字符串按字典序排序。

请你返回排序后的第 k 个开心字符串，如果长度为 n 的开心字符串少于 k 个，那么请你返回 空字符串 。

 

示例 1：

输入：n = 1, k = 3
输出："c"
解释：列表 ["a", "b", "c"] 包含了所有长度为 1 的开心字符串。
按照字典序排序后第三个字符串为 "c" 。
示例 2：

输入：n = 1, k = 4
输出：""
解释：长度为 1 的开心字符串只有 3 个。
示例 3：

输入：n = 3, k = 9
输出："cab"
解释：长度为 3 的开心字符串总共有 12 个 ["aba", "abc", "aca", "acb", "bab", "bac", "bca", "bcb", "cab", "cac", "cba", "cbc"] 。
第 9 个字符串为 "cab"
示例 4：

输入：n = 2, k = 7
输出：""
示例 5：

输入：n = 10, k = 100
输出："abacbabacb"
 

提示：

1 <= n <= 10
1 <= k <= 100

思路：双周赛第三题，（8min31s）回溯+DFS
套回溯板子，按需更改，当字符串的长度等于给定第一个值时，将字符串入中间数组，结束DFS
否则遍历三个字符，当字符串长度等于0或字符串最后一个字符不等于当前字符就加上该字符然后下一层回溯，之后字符串再去掉这个字符
最后返回三目运算符当前给定第二个值减一小于中间数组长度时返回中间数组对应的给定第二个值减一作为下标的字符串即可
否则返回空字符串（符合条件的字符串不够）即可

上代码：
class Solution {
public:
    vector<string> curr;
    
    void BackTracking(int a, int b, string s) {
        if(s.size() == a) {
            curr.push_back(s);
            return ;
        }
        for(int i = 0; i < 3; i++) {
            char ch = i + 'a';
            if(s.size() == 0 || ch != s[s.size() - 1]) {
                s += ch;
                BackTracking(a, b, s);
                s = s.substr(0, s.size() - 1);
            }
        }
    }
    
    string getHappyString(int n, int k) {
        BackTracking(n, k, "");
        return k - 1 < curr.size() ? curr[k - 1] : "";
    }
};