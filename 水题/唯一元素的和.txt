题目难度：EASY

给你一个整数数组 nums 。
数组中唯一元素是那些只出现 恰好一次 的元素。
请你返回 nums 中唯一元素的 和 。
示例 1：
输入：nums = [1,2,3,2]
输出：4
解释：唯一元素为 [1,3] ，和为 4 。
示例 2：
输入：nums = [1,1,1,1,1]
输出：0
解释：没有唯一元素，和为 0 。
示例 3 ：
输入：nums = [1,2,3,4,5]
输出：15
解释：唯一元素为 [1,2,3,4,5] ，和为 15 。
提示：
1 <= nums.length <= 100
1 <= nums[i] <= 100

思路：模拟
（CE点：当数组项为1时返回数组值即可）
排序数组
遍历数组，比较每相邻两项的值如果不等就加给结果值（初值0）
最后返回结果值即可
（WA点：算法错误）

执行用时：
0 ms
, 在所有 C++ 提交中击败了
100.00%
的用户
内存消耗：
7.7 MB
, 在所有 C++ 提交中击败了
64.74%
的用户
（时间完杀！！！空间一般）

上代码：
class Solution {
public:
    int res = 0;
    
    int sumOfUnique(vector<int>& nums) {
        if(nums.size() == 1) return nums[0];
        sort(nums.begin(), nums.end());
        for(int i = 1; i < nums.size() - 1; i++) {
            if(nums[i] != nums[i + 1] && nums[i] != nums[i - 1]) res += nums[i];
        }
        if(nums[0] != nums[1]) res += nums[0];
        if(nums[nums.size() - 1] != nums[nums.size() - 2]) res += nums[nums.size() - 1];
        return res;
    }
};