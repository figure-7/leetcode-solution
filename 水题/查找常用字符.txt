题目难度：EASY

给定仅有小写字母组成的字符串数组 A，返回列表中的每个字符串中都显示的全部字符（包括重复字符）组成的列表。

例如，如果一个字符在每个字符串中出现 3 次，但不是 4 次，则需要在最终答案中包含该字符 3 次。

你可以按任意顺序返回答案。

 

示例 1：

输入：["bella","label","roller"]
输出：["e","l","l"]
示例 2：

输入：["cool","lock","cook"]
输出：["c","o"]
 

提示：

1 <= A.length <= 100
1 <= A[i].length <= 100
A[i][j] 是小写字母

思路：模拟
遍历一次第一个字符，对应字符入数组，值为个数
然后遍历接下来的字符串，先找个数组继承当前数组
然后对于后面的数组，如果当前数组对应下标值大于0，就把值减一
内部遍历结束后开始的数组值改为开始的数组值减去继承数组值（也就是按小的来，从而都相同）
外部遍历结束后，遍历开始的数组，将对应值个字符转化为字符串放入结果数组
最后返回结果数组即可

执行用时 :
16 ms
, 在所有 C++ 提交中击败了
40.73%
的用户
内存消耗 :
12 MB
, 在所有 C++ 提交中击败了
17.58%
的用户
（时间一般，空间不咋地）

上代码：
class Solution {
public:
    vector<string> res;
    
    vector<string> commonChars(vector<string>& A) {
        vector<int> curr(26, 0);
        for(int i = 0; i < A[0].size(); i++)
            curr[A[0][i] - 'a']++;
        for(int i = 0; i < A.size(); i++) {
            vector<int> currmodtwo = curr;
            for(int j = 0; j < A[i].size(); j++)
                if(currmodtwo[A[i][j] - 'a'] > 0)
                    currmodtwo[A[i][j] - 'a']--;
            for(int i = 0; i < 26; i++)
                curr[i] = curr[i] - currmodtwo[i];
        }
        for(int i = 0; i < 26; i++) {
            while(curr[i] > 0) {
                curr[i]--;
                string s = "";
                s += i + 'a';
                res.push_back(s);
            }
        }
        return res;
    }
};