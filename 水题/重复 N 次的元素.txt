题目难度：EASY

在大小为 2N 的数组 A 中有 N+1 个不同的元素，其中有一个元素重复了 N 次。

返回重复了 N 次的那个元素。

 

示例 1：

输入：[1,2,3,3]
输出：3
示例 2：

输入：[2,1,2,5,3,2]
输出：2
示例 3：

输入：[5,1,5,2,5,3,5,4]
输出：5
 

提示：

4 <= A.length <= 10000
0 <= A[i] < 10000
A.length 为偶数

思路：模拟
建立一个数组，值为当前下标的值的个数
遍历一次数组，对个数进行统计，等于数组长度的一半就返回当前元素即可
最后随便返回个数即可

执行用时 :
148 ms
, 在所有 C++ 提交中击败了
5.96%
的用户
内存消耗 :
28.3 MB
, 在所有 C++ 提交中击败了
5.26%
的用户
（时空都炸了...）

上代码：
class Solution {
public:
    int repeatedNTimes(vector<int>& A) {
        vector<int> curr(10005, 0);
        for(int i = 0; i < A.size(); i++) {
            curr[A[i]]++;
            if(curr[A[i]] == A.size() / 2) return A[i];
        }
        return 0;
    }
};