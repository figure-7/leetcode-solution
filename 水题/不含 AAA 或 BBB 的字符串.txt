题目难度：MEDIUM

给定两个整数 A 和 B，返回任意字符串 S，要求满足：

S 的长度为 A + B，且正好包含 A 个 'a' 字母与 B 个 'b' 字母；
子串 'aaa' 没有出现在 S 中；
子串 'bbb' 没有出现在 S 中。
 

示例 1：

输入：A = 1, B = 2
输出："abb"
解释："abb", "bab" 和 "bba" 都是正确答案。
示例 2：

输入：A = 4, B = 1
输出："aabaa"
 

提示：

0 <= A <= 100
0 <= B <= 100
对于给定的 A 和 B，保证存在满足要求的 S。

思路：模拟
当两者剩余数目不等时，对应多的先加两个对应字符，然后少的加一个对应字符
当其中一个数目为0时结束循环（WA点1,2 ：不这么搞会比较麻烦）
否则如果剩下的数目相等，就循环加入"ab"直到数目为0
然后判断当其中一个数目不为0，加上对应数目字符即可
最后返回结果字符串即可

执行用时 :
4 ms
, 在所有 C++ 提交中击败了
64.29%
的用户
内存消耗 :
7.7 MB
, 在所有 C++ 提交中击败了
100.00%
的用户
（时间一般，空间完杀！！！原地）

上代码：
class Solution {
public:
    string res = "";
    
    string strWithout3a3b(int A, int B) {
        while(A > B) {
            if(B == 0)
                break;
            res += "aab";
            A -= 2;
            B--;
        }
        while(A < B) {
            if(A == 0)
                break;
            res += "bba";
            B -= 2;
            A--;
        }
        while(A > 0 && B > 0) {
            if(res[res.size() - 1] == 'a') {
                res += 'b';
                B--;
            } else {
                res += 'a';
                A--;
            }
        }
        while(A > 0) {
            res += "a";
            A--;
        }
        while(B > 0) {
            res += "b";
            B--;
        }
        return res;
    }
};