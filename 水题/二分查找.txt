题目难度：EASY

给定一个 n 个元素有序的（升序）整型数组 nums 和一个目标值 target  ，写一个函数搜索 nums 中的 target，如果目标值存在返回下标，否则返回 -1。


示例 1:

输入: nums = [-1,0,3,5,9,12], target = 9
输出: 4
解释: 9 出现在 nums 中并且下标为 4
示例 2:

输入: nums = [-1,0,3,5,9,12], target = 2
输出: -1
解释: 2 不存在 nums 中因此返回 -1
 

提示：

你可以假设 nums 中的所有元素是不重复的。
n 将在 [1, 10000]之间。
nums 的每个元素都将在 [-9999, 9999]之间。

思路：二分
三分钟题，直接二分套板子就行了，找到就返回下标
否则返回-1即可

执行用时 :
44 ms
, 在所有 C++ 提交中击败了
77.06%
的用户
内存消耗 :
11 MB
, 在所有 C++ 提交中击败了
68.91%
的用户
（时间还可以，空间一般，都是原地嘛，，）

上代码：
class Solution {
public:
    int search(vector<int>& nums, int target) {
        int begin = 0;
        int end = nums.size() - 1;
        int mid = 0;
        while(begin <= end) {
            mid = (begin + end) / 2;
            if(nums[mid] == target)
                return mid;
            else if(nums[mid] > target)
                end = mid - 1;
            else
                begin = mid + 1;
	    }
        return -1;
    }
};