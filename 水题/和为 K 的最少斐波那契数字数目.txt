题目难度：MEDIUM

给你数字 k ，请你返回和为 k 的斐波那契数字的最少数目，其中，每个斐波那契数字都可以被使用多次。

斐波那契数字定义为：

F1 = 1
F2 = 1
Fn = Fn-1 + Fn-2 ， 其中 n > 2 。
数据保证对于给定的 k ，一定能找到可行解。

 

示例 1：

输入：k = 7
输出：2 
解释：斐波那契数字为：1，1，2，3，5，8，13，……
对于 k = 7 ，我们可以得到 2 + 5 = 7 。
示例 2：

输入：k = 10
输出：2 
解释：对于 k = 10 ，我们可以得到 2 + 8 = 10 。
示例 3：

输入：k = 19
输出：3 
解释：对于 k = 19 ，我们可以得到 1 + 5 + 13 = 19 。
 

提示：

1 <= k <= 10^9

思路：双周赛第二题，（13min13s）DP
初始化F[0] = 1; F[1] = 1;
DP表达式：F[n] = F[n - 1] + F[n - 2];
先计算除所有小于给定值的数组值
然后从计算过值的位置逆序遍历，遇见小于等于给定值，就把给定值减去当前数组值，结果（初值0）加一
最后返回结果即可

上代码：
class Solution {
public:
    int res = 0, n = 2;
    
    int findMinFibonacciNumbers(int k) {
        int F[10000] = {0};
        F[0] = 1;
        F[1] = 1;
        while(F[n - 1] < k) {
            F[n] = F[n - 1] + F[n - 2];
            n++;
        }
        for(int i = n - 1; i >= 0; i--) {
            while(k > 0 && k >= F[i]) {
                res++;
                k -= F[i];
            }
        }
        return res;
    }
};