题目难度：EASY

给你一个整数数组 arr ，请你将数组中的每个元素替换为它们排序后的序号。

序号代表了一个元素有多大。

序号编号的规则如下：

序号从 1 开始编号。
一个元素越大，那么序号越大。
如果两个元素相等，那么它们的序号相同。
每个数字的序号都应该尽可能地小。
 

示例 1：

输入：arr = [40,10,20,30]
输出：[4,1,2,3]
解释：40 是最大的元素。 
10 是最小的元素。 
20 是第二小的数字。 
30 是第三小的数字。
示例 2：

输入：arr = [100,100,100]
输出：[1,1,1]
解释：所有元素有相同的序号。
示例 3：

输入：arr = [37,12,28,9,100,56,80,5,12]
输出：[5,3,4,2,8,6,7,1,3]
 

提示：

0 <= arr.length <= 105
-109 <= arr[i] <= 109

思路：周赛第一题，哈希表
先用一个数组继承原数组，然后将该数组进行排序，并循环遍历该数组统计重复值的个数
哈希表判断没有当前值就把当前值放入哈希表，并把值赋为当前遍历下标减去重复值个数
然后遍历给定数组长度次，将哈希表对应的值为给定数组值的值放入结果数组中
最后返回结果数组即可

上代码：
class Solution {
public:
    unordered_map<int, int> map;
    vector<int> res;
    int sum = 0;
    
    vector<int> arrayRankTransform(vector<int>& arr) {
        vector<int> curr = arr;
        sort(curr.begin(), curr.end());
        for(int i = 0; i < curr.size(); i++) {
            if(map.find(curr[i]) == map.end())
                map[curr[i]] = i - sum;
            else
                sum++;
        }
        for(int i = 0; i < arr.size(); i++)
            res.push_back(map[arr[i]] + 1);
        return res;
    }
};