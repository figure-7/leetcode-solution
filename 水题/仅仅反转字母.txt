题目难度：EASY

给定一个字符串 S，返回 “反转后的” 字符串，其中不是字母的字符都保留在原地，而所有字母的位置发生反转。

 

示例 1：

输入："ab-cd"
输出："dc-ba"
示例 2：

输入："a-bC-dEf-ghIj"
输出："j-Ih-gfE-dCba"
示例 3：

输入："Test1ng-Leet=code-Q!"
输出："Qedo1ct-eeLg=ntse-T!"
 

提示：

S.length <= 100
33 <= S[i].ASCIIcode <= 122 
S 中不包含 \ or "

思路：模拟
遍历字符串，首位指针判断不是字母就分别右移左移
否则进行字符调换
最后返回结果字符串即可

执行用时 :
0 ms
, 在所有 C++ 提交中击败了
100.00%
的用户
内存消耗 :
6 MB
, 在所有 C++ 提交中击败了
100.00%
的用户
（时空都完杀！！！）

上代码：
class Solution {
public:
    string reverseOnlyLetters(string S) {
        int j = S.size() - 1;
        for(int i = 0; i < S.size(); i++) {
            while((S[j] < 'a' && S[j] > 'Z') || S[j] < 'A' || S[j] > 'z'){
                j--;
                if(j <= i) break;
            }
            if(j <= i) break;
            if(((S[i] >= 'a'&& S[i] <= 'z') || (S[i] >= 'A' && S[i] <= 'Z')) && j > i) {
                char ch = S[i];
                S[i] = S[j];
                S[j] = ch;
                j--;
            }
        }
        return S;
    }
};