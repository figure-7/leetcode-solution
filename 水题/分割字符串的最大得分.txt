题目难度：EASY

给你一个由若干 0 和 1 组成的字符串 s ，请你计算并返回将该字符串分割成两个 非空 子字符串（即 左 子字符串和 右 子字符串）所能获得的最大得分。

「分割字符串的得分」为 左 子字符串中 0 的数量加上 右 子字符串中 1 的数量。

 

示例 1：

输入：s = "011101"
输出：5 
解释：
将字符串 s 划分为两个非空子字符串的可行方案有：
左子字符串 = "0" 且 右子字符串 = "11101"，得分 = 1 + 4 = 5 
左子字符串 = "01" 且 右子字符串 = "1101"，得分 = 1 + 3 = 4 
左子字符串 = "011" 且 右子字符串 = "101"，得分 = 1 + 2 = 3 
左子字符串 = "0111" 且 右子字符串 = "01"，得分 = 1 + 1 = 2 
左子字符串 = "01110" 且 右子字符串 = "1"，得分 = 2 + 1 = 3
示例 2：

输入：s = "00111"
输出：5
解释：当 左子字符串 = "00" 且 右子字符串 = "111" 时，我们得到最大得分 = 2 + 3 = 5
示例 3：

输入：s = "1111"
输出：3
 

提示：

2 <= s.length <= 500
字符串 s 仅由字符 '0' 和 '1' 组成。

思路：周赛第一题（7min27s），模拟
（WA点1：审题错误）
遍历字符串，记录'0'的个数
遍历字符串，当前是'0'对应计数加一，统计右半部分不是'0'的个数，两个值累加与结果（初值0）取最大值
否则'1'对应计数加一，统计右半部分不是'0'的个数，两个值累加与结果（初值0）取最大值（WA点2：这里缺少判断）
最后返回结果即可

上代码：
class Solution {
public:
    int sum = 0, cur = 0, curmodtwo = 0, res = 0;
    
    int maxScore(string s) {
        for(int i = 0; i < s.size(); i++) if(s[i] == '0') sum++;
        for(int i = 0; i < s.size() - 1; i++) {
            if(s[i] == '0') {
                cur++;
                int curmodthree = cur + s.size() - curmodtwo - sum;
                res = max(res, curmodthree);
            } else {
                curmodtwo++;
                int curmodthree = cur + s.size() - curmodtwo - sum;
                res = max(res, curmodthree);
            }
        }
        return res;
    }
};