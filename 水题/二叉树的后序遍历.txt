题目难度：HARD
给定一个二叉树，返回它的 后序 遍历。

示例:

输入: [1,null,2,3]  
   1
    \
     2
    /
   3 

输出: [3,2,1]
进阶: 递归算法很简单，你可以通过迭代算法完成吗？
思路：递归啊......
代码：
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> postorderTraversal(TreeNode* root) {
        vector<int> vals;
        if(root==NULL) {
            return vals;
        }
        DFS(root,vals);
        return vals;
    }
    void DFS(TreeNode* r, vector<int>& a) {
        if(r->left) {
            DFS(r->left,a);
        }
        if(r->right) {
            DFS(r->right,a);
        }
        a.push_back(r->val);
    }
};