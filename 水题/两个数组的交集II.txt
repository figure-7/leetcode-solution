题目难度：EASY

给定两个数组，编写一个函数来计算它们的交集。

示例 1:

输入: nums1 = [1,2,2,1], nums2 = [2,2]
输出: [2,2]
示例 2:

输入: nums1 = [4,9,5], nums2 = [9,4,9,8,4]
输出: [4,9]
说明：

输出结果中每个元素出现的次数，应与元素在两个数组中出现的次数一致。
我们可以不考虑输出结果的顺序。
进阶:

如果给定的数组已经排好序呢？你将如何优化你的算法？
如果 nums1 的大小比 nums2 小很多，哪种方法更优？
如果 nums2 的元素存储在磁盘上，磁盘内存是有限的，并且你不能一次加载所有的元素到内存中，你该怎么办？

思路：先排序，然后利用进阶考虑排序后双重遍历
可以进行找到后就删除并退出并且如果大了直接退出，记录内部下标位置等下标实现快速进行
把结果保存进数组返回即可（我没简化那么多。。。）

执行用时 :
16 ms
, 在所有 cpp 提交中击败了
24.38%
的用户
内存消耗 :
9.1 MB
, 在所有 cpp 提交中击败了
59.43%
的用户

上代码：
class Solution {
public:
    vector<int> res;
    
    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {
        sort(nums1.begin(), nums1.end());
        sort(nums2.begin(), nums2.end());
        for(int i = 0; i < nums1.size(); i++) {
            for(int j = 0; j < nums2.size(); j++) {
                if(nums1[i] == nums2[j]) {
                    res.push_back(nums1[i]);
                    vector<int>::iterator it = nums2.begin() + j;
                    nums2.erase(it);
                    break;
                }
            }
        }
        return res;
    }
};