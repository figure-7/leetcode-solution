题目难度：EASY

编写一个函数，以字符串作为输入，反转该字符串中的元音字母。

示例 1:

输入: "hello"
输出: "holle"
示例 2:

输入: "leetcode"
输出: "leotcede"
说明:
元音字母不包含字母"y"。

思路：模拟
先遍历一次，将元音字符和对应下标分别保存进两个数组中
然后反转字符数组
之后再遍历一次下标数组，找到对应下标值的字符串对应字符，将值改为字符数组对应下标值
返回字符串即可

执行用时 :
12 ms
, 在所有 C++ 提交中击败了
74.50%
的用户
内存消耗 :
10.8 MB
, 在所有 C++ 提交中击败了
5.12%
的用户
（时间还行，空间炸了，，，）

上代码：
class Solution {
public:
    vector<int> curr;
    vector<char> currmodtwo;
    
    string reverseVowels(string s) {
        for(int i = 0; i < s.length(); i++) {
            if(s[i] == 'a' || s[i] == 'A' || s[i] == 'e' || s[i] == 'E' || s[i] == 'i' || s[i] == 'I' || s[i] == 'o' || s[i] =='u' || s[i] == 'U' || s[i] == 'O') {
                curr.push_back(i);
                currmodtwo.push_back(s[i]);
            }
        }
        reverse(currmodtwo.begin(), currmodtwo.end());
        for(int i = 0; i < curr.size(); i++)
            s[curr[i]] = currmodtwo[i];
        return s;
    }
};