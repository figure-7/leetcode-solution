题目难度：MEDIUM

给出数字 N，返回由若干 "0" 和 "1"组成的字符串，该字符串为 N 的负二进制（base -2）表示。

除非字符串就是 "0"，否则返回的字符串中不能含有前导零。

 

示例 1：

输入：2
输出："110"
解释：(-2) ^ 2 + (-2) ^ 1 = 2
示例 2：

输入：3
输出："111"
解释：(-2) ^ 2 + (-2) ^ 1 + (-2) ^ 0 = 3
示例 3：

输入：4
输出："100"
解释：(-2) ^ 2 = 4
 

提示：

0 <= N <= 10^9

思路：栈
直接套十进制转负二进制板子，然后把出栈变为元素对应字符依次写进字符串，输入输出删掉，对应值改好
注意0时返回字符串0（WA点：忘改了返回数字了）
最后返回结果字符串即可

执行用时 :
0 ms
, 在所有 C++ 提交中击败了
100.00%
的用户
内存消耗 :
8.5 MB
, 在所有 C++ 提交中击败了
6.82%
的用户
（时间完杀！！！空间炸了）

上代码：
class Solution {
public:
    stack <int> s;
    string res = "";
    
    string baseNeg2(int N) {
        int a;
        if(N == 0)
            return "0";
        else {
            while(N!=0) {
                a = abs( N % (-2));
                s.push(a);
                N = ( N - a) / (-2);
            }
        }
        while(!s.empty()) {
            res += s.top() + '0';
            s.pop();
        }
        return res;
    }
};