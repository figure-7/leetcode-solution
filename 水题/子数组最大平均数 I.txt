题目难度：EASY

给定 n 个整数，找出平均数最大且长度为 k 的连续子数组，并输出该最大平均数。
示例：
输入：[1,12,-5,-6,50,3], k = 4
输出：12.75
解释：最大平均数 (12-5-6+50)/4 = 51/4 = 12.75
提示：
1 <= k <= n <= 30,000。
所给数据范围 [-10,000，10,000]。

思路：SlidingWindows
套滑窗板子，每次当数组累加值小于给定长度时就只做累加（WA点2：不能判断最大和）
否则减去窗口最前面的值，加上窗口最后面的值，判断最大值（WA点1：最大值初始化腰围最小值，不能为0）
最后强转数据类型把和除以给定长度返回值就可以了

执行用时：
136 ms
, 在所有 C++ 提交中击败了
92.26%
的用户
内存消耗：
69.9 MB
, 在所有 C++ 提交中击败了
84.08%
的用户
（时间很好，空间不错）

上代码：
class Solution {
public:
    int sum = 0, cur = 0, res = -1e9;
    
    double findMaxAverage(vector<int>& nums, int k) {
        for(int i = 0; i < nums.size(); i++) {
            if(sum < k) {
                cur += nums[i];
                sum++;
            } else {
                cur -= nums[i - k];
                cur += nums[i];
            }
            if(sum >= k) res = max(res, cur);
        }
        return (double)res / k;
    }
};