题目难度：EASY
有一个数组，其中的值符合等差数列的数值规律，也就是说：

在 0 <= i < arr.length - 1 的前提下，arr[i+1] - arr[i] 的值都相等。
我们会从该数组中删除一个 既不是第一个 也 不是最后一个的值，得到一个新的数组  arr。

给你这个缺值的数组 arr，请你帮忙找出被删除的那个数。

 

示例 1：

输入：arr = [5,7,11,13]
输出：9
解释：原来的数组是 [5,7,9,11,13]。
示例 2：

输入：arr = [15,13,12]
输出：14
解释：原来的数组是 [15,14,13,12]。
 

提示：

3 <= arr.length <= 1000
0 <= arr[i] <= 10^5

思路：首先我的方法不太好，我是先排序然后记录每相邻两个数的差值
然后看哪个插值大，就记录下差值大对应左边的数的下标
然后将该下标的数值和下一个位置的数值累加除2即可得到结果
其实不排序也可以，单纯的多此一举了。。。

上代码：
class Solution {
public:
    int missingNumber(vector<int>& arr) {
        int biao;
        sort(arr.begin(), arr.end());
        int aim = arr[1] - arr[0];
        for(int i = 1; i < arr.size() - 1; i++) {
            int a = arr[i + 1] - arr[i];
            if(aim > a) {
                biao = 0;
                break;
            }
            if(aim < a) {
                biao = i;
                break;
            }
        }
        return (arr[biao] + arr[biao + 1]) / 2;
    }
};