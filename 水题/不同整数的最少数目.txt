题目难度：MEDIUM

给你一个整数数组 arr 和一个整数 k 。

现需要从数组中恰好移除 k 个元素，请找出移除后数组中不同整数的最少数目。

 

示例 1：

输入：arr = [5,5,4], k = 1
输出：1
解释：移除 1 个 4 ，数组中只剩下 5 一种整数。
示例 2：

输入：arr = [4,3,1,1,3,3,2], k = 3
输出：2
解释：先移除 4、2 ，然后再移除两个 1 中的任意 1 个或者三个 3 中的任意 1 个，最后剩下 1 和 3 两种整数。
 

提示：

1 <= arr.length <= 10^5
1 <= arr[i] <= 10^9
0 <= k <= arr.length

思路：周赛第二题，模拟
排序数组，然后统计相同数字个数保存进中间数组
中间数组排序后从小到大分别用给定值减，不够减了就返回数组长度减去当前下标值即可
最后返回0即可

上代码：
class Solution {
public:
    vector<int> curr;
    int sum = 1; 
    
    int findLeastNumOfUniqueInts(vector<int>& arr, int k) {
        sort(arr.begin(), arr.end());
        int cur = arr[0];
        for(int i = 1; i < arr.size(); i++) {
            if(arr[i] == cur) sum++;
            else {
                curr.push_back(sum);
                sum = 1;
                cur = arr[i];
            }
        }
        curr.push_back(sum);
        sort(curr.begin(), curr.end());
        for(int i = 0; i < curr.size(); i++) {
            if(curr[i] <= k)  k -= curr[i];
            else return curr.size() - i;
        }
        return 0;
    }
};