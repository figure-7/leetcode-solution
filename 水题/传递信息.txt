题目难度：EASY

小朋友 A 在和 ta 的小伙伴们玩传信息游戏，游戏规则如下：

有 n 名玩家，所有玩家编号分别为 0 ～ n-1，其中小朋友 A 的编号为 0
每个玩家都有固定的若干个可传信息的其他玩家（也可能没有）。
传信息的关系是单向的（比如 A 可以向 B 传信息，但 B 不能向 A 传信息）。
每轮信息必须需要传递给另一个人，且信息可重复经过同一个人
给定总玩家数 n，以及按 [玩家编号,对应可传递玩家编号] 关系组成的二维数组 relation。
返回信息从小 A (编号 0 ) 经过 k 轮传递到编号为 n-1 的小伙伴处的方案数；
若不能到达，返回 0。

示例 1：

输入：n = 5, relation = [[0,2],[2,1],[3,4],[2,3],[1,4],[2,0],[0,4]], k = 3

输出：3

解释：信息从小 A 编号 0 处开始，经 3 轮传递，到达编号 4。

共有 3 种方案，分别是 0->2->0->4， 0->2->1->4， 0->2->3->4。

示例 2：

输入：n = 3, relation = [[0,2],[2,1]], k = 2

输出：0

解释：信息不能从小 A 处经过 2 轮传递到编号 2

限制：

2 <= n <= 10
1 <= k <= 5
1 <= relation.length <= 90, 且 relation[i].length == 2
0 <= relation[i][0],relation[i][1] < n 且 relation[i][0] != relation[i][1]

思路：力扣春季全国编程大赛第二题，（36min15s）DFS+哈希表
先将给定数组的对保存进二维数组中，哈希表去重复的值，然后调用DFS（RE：忘了怎么搞得了...）
DFS内部当累加次数等于给定次数时，如果当前下标为最后一个人对应的值，就把结果（初值0）加一
然后结束DFS（TLE点1,2,3,4：只在当前下标为最后一个人对应的值时结束DFS了，结果四发...）
否则遍历当前下标（初值0）的数组（所有朋友）
内部次数加一，下标值为朋友对应的下标值，分别代入DFS计算
最后返回结果即可

上代码：
class Solution {
public:
    int res = 0;
    unordered_map<string, int> map;
    
    void DFS(vector<vector<int>>& relation, int cur, int sum, int k, int n, vector<vector<int> > currmodtwo) {
        if(sum == k) {
            if(cur == n - 1) res++;
            return ;
        }
        if(currmodtwo[cur].size() == 0) return ;
        for(int i = 0; i < currmodtwo[cur].size(); i++) DFS(relation, currmodtwo[cur][i], sum + 1, k, n, currmodtwo);
    }
    
    int numWays(int n, vector<vector<int>>& relation, int k) {
        vector<vector<int> > curr(105);
        for(int i = 0; i < relation.size(); i++) {
            char a = relation[i][0] + '0';
            char b = relation[i][1] + '0';
            string s = "";
            s += a;
            s += b;
            if(map.find(s) == map.end()) {
                curr[relation[i][0]].push_back(relation[i][1]);
                map[s] = 1;
            }
        }
        DFS(relation, 0, 0, k, n, curr);
        return res;
    }
};