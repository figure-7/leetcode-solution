题目难度：MEDIUM

给你一个整数 n ，请你找出并返回第 n 个 丑数 。
丑数 就是只包含质因数 2、3 和/或 5 的正整数。
示例 1：
输入：n = 10
输出：12
解释：[1, 2, 3, 4, 5, 6, 8, 9, 10, 12] 是由前 10 个丑数组成的序列。
示例 2：
输入：n = 1
输出：1
解释：1 通常被视为丑数。
提示：
1 <= n <= 1690

思路：数论
直接上网搜套板子就行了

执行用时：
8 ms
, 在所有 C++ 提交中击败了
71.27%
的用户
内存消耗：
7.5 MB
, 在所有 C++ 提交中击败了
69.33%
的用户
（时间不错，空间一般）

上代码：
class Solution {
public:
    int count=1, index_2=0,index_3=0,index_5=0, number=1;

    int nthUglyNumber(int n) {
        if(n == 0) return 0;
        vector<int> uglyNumber(n);
        uglyNumber[0] = 1;
        while(count < n){
            int tmpnumber_2 = uglyNumber[index_2] * 2, tmpnumber_3 = uglyNumber[index_3] * 3, tmpnumber_5 = uglyNumber[index_5] * 5;
            number = min(tmpnumber_2, min(tmpnumber_3, tmpnumber_5));
            uglyNumber[count] = number;
            while(uglyNumber[index_2] * 2 <= uglyNumber[count]) index_2++;
            while(uglyNumber[index_3] * 3 <= uglyNumber[count]) index_3++;
            while(uglyNumber[index_5] * 5 <= uglyNumber[count]) index_5++;
            count++;
        }
        return number;
    }
};
