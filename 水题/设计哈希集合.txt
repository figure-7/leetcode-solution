题目难度：EASY

不使用任何内建的哈希表库设计一个哈希集合

具体地说，你的设计应该包含以下的功能

add(value)：向哈希集合中插入一个值。
contains(value) ：返回哈希集合中是否存在这个值。
remove(value)：将给定值从哈希集合中删除。如果哈希集合中没有这个值，什么也不做。

示例:

MyHashSet hashSet = new MyHashSet();
hashSet.add(1);         
hashSet.add(2);         
hashSet.contains(1);    // 返回 true
hashSet.contains(3);    // 返回 false (未找到)
hashSet.add(2);          
hashSet.contains(2);    // 返回 true
hashSet.remove(2);          
hashSet.contains(2);    // 返回  false (已经被删除)

注意：

所有的值都在 [0, 1000000]的范围内。
操作的总数目在[1, 10000]范围内。
不要使用内建的哈希集合库。

思路：模拟
建立一个结果数组，之后各个函数写法如下：
add():一行，放入值进数组即可
remove():遍历，找到值就将值改为-1即可（根据数据范围可知不可能存在原数据时负数的情况）
contains():遍历数组，找到值就返回true，否则返回false

执行用时 :
276 ms
, 在所有 C++ 提交中击败了
30.48%
的用户
内存消耗 :
36 MB
, 在所有 C++ 提交中击败了
95.34%
的用户
（时间很慢，爆搜，空间很好）

上代码;
class MyHashSet {
public:
    vector<int> curr;
    /** Initialize your data structure here. */
    MyHashSet() {
        
    }
    
    void add(int key) {
        curr.push_back(key);
    }
    
    void remove(int key) {
        for(int i = 0; i < curr.size(); i++)
            if(curr[i] == key) curr[i] = -1;
    }
    
    /** Returns true if this set contains the specified element */
    bool contains(int key) {
        for(auto a : curr)
            if(a == key) return true;
        return false;
    }
};

/**
 * Your MyHashSet object will be instantiated and called as such:
 * MyHashSet* obj = new MyHashSet();
 * obj->add(key);
 * obj->remove(key);
 * bool param_3 = obj->contains(key);
 */