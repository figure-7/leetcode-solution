题目难度：EASY

给定一个偶数长度的数组，其中不同的数字代表着不同种类的糖果，每一个数字代表一个糖果。
你需要把这些糖果平均分给一个弟弟和一个妹妹。返回妹妹可以获得的最大糖果的种类数。



示例 1:

输入: candies = [1,1,2,2,3,3]

输出: 3

解析: 一共有三种种类的糖果，每一种都有两个。
     
最优分配方案：妹妹获得[1,2,3],弟弟也获得[1,2,3]。
这样使妹妹获得糖果的种类数最多。


示例 2 :

输入: candies = [1,1,2,3]

输出: 2

解析: 妹妹获得糖果[2,3],弟弟获得糖果[1,1]，妹妹有两种不同的糖果，弟弟只有一种。
这样使得妹妹可以获得的糖果种类数最多。


注意:

数组的长度为[2, 10,000]，并且确定为偶数。

数组中数字的大小在范围[-100,000, 100,000]内。



思路：没啥时间要求，空间也没有，所以可以直接sort排序，然后找出糖类总数
最后看类数跟每个人糖数比较，大于等于就返回糖类总数，小于返回每个人糖数/2
注意空数组即可

执行用时 :
292 ms
, 在所有 C++ 提交中击败了
94.14%
的用户
内存消耗 :
16.2 MB
, 在所有 C++ 提交中击败了
98.32%
的用户

上代码：
class Solution {
public:
    int sum = 1;
    int distributeCandies(vector<int>& candies) {
        if(candies.size() == 0) {
            return 0;
        }
        sort(candies.begin(), candies.end());
        for(int i = 0; i < candies.size()-1; i++) {
            if(candies[i] != candies[i+1]) {
                sum++;
            }
        }
        return (candies.size()/2)>=sum?sum:candies.size()/2;
    }
};