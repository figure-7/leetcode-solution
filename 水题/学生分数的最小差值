题目难度：EASY

给你一个 下标从 0 开始 的整数数组 nums ，其中 nums[i] 表示第 i 名学生的分数。
另给你一个整数 k 。
从数组中选出任意 k 名学生的分数，使这 k 个分数间 最高分 和 最低分 的 差值 达到 最小化 。
返回可能的 最小差值 。
示例 1：
输入：nums = [90], k = 1
输出：0
解释：选出 1 名学生的分数，仅有 1 种方法：
- [90] 最高分和最低分之间的差值是 90 - 90 = 0
可能的最小差值是 0
示例 2：
输入：nums = [9,4,1,7], k = 2
输出：2
解释：选出 2 名学生的分数，有 6 种方法：
- [9,4,1,7] 最高分和最低分之间的差值是 9 - 4 = 5
- [9,4,1,7] 最高分和最低分之间的差值是 9 - 1 = 8
- [9,4,1,7] 最高分和最低分之间的差值是 9 - 7 = 2
- [9,4,1,7] 最高分和最低分之间的差值是 4 - 1 = 3
- [9,4,1,7] 最高分和最低分之间的差值是 7 - 4 = 3
- [9,4,1,7] 最高分和最低分之间的差值是 7 - 1 = 6
可能的最小差值是 2
提示：
1 <= k <= nums.length <= 1000
0 <= nums[i] <= 105

思路：模拟
首先如果数组长度等于1返回0即可
排序数组
遍历每隔k-1项，计算两者的差值与结果值（初值10000005）的最小值给结果值
最后返回结果值即可

执行用时：
12 ms
, 在所有 C++ 提交中击败了
88.69%
的用户
内存消耗：
13.2 MB
, 在所有 C++ 提交中击败了
92.76%
的用户
（时间不错，空间不错）

上代码：
class Solution {
public:
    int res = 10000005;

    int minimumDifference(vector<int>& nums, int k) {
        if(nums.size() == 1) return 0;
        sort(nums.begin(), nums.end());
        for(int i = 0; i < nums.size() - k + 1; i++) {
            int cur = nums[i + k - 1] - nums[i];
            res = min(cur, res);
        }
        return res;
    }
};
