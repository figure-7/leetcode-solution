题目难度：MEDIUM

给定一组不含重复元素的整数数组 nums，返回该数组所有可能的子集（幂集）。

说明：解集不能包含重复的子集。

示例:
输入: nums = [1,2,3]

输出:
[
  [3],
? [1],
? [2],
? [1,2,3],
? [1,3],
? [2,3],
? [1,2],  []  ]

思路：利用DFS + BackTracking实现，注意一下去重要在for循环加入的curr.pop_back()即可

执行用时 :
20 ms
, 在所有C++提交中击败了
35.98%
的用户
内存消耗 :
9.3 MB
, 在所有C++提交中击败了
28.12%
的用户

上代码：
class Solution {
public:
    vector<vector<int>> subsets(vector<int>& nums) {
        vector<vector<int>> tmp;
        if(nums.size()==0) {
            return tmp;
        }
        int size = nums.size();
        vector<int> cur;
        DFS(tmp,cur,nums,size,0);
        return tmp;
    }
    void DFS(vector<vector<int>>& ret, vector<int> curr, vector<int>& nums, int n, int level) {
        ret.push_back(curr);
        for(int i = level; i < n; i++) {
            curr.push_back(nums[i]);
            DFS(ret,curr,nums,n,i+1);
            curr.pop_back();
        }
    }
};