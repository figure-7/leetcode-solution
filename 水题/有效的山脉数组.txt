题目难度：EASY

给定一个整数数组 A，如果它是有效的山脉数组就返回 true，否则返回 false。

让我们回顾一下，如果 A 满足下述条件，那么它是一个山脉数组：

A.length >= 3
在 0 < i < A.length - 1 条件下，存在 i 使得：
A[0] < A[1] < ... A[i-1] < A[i]
A[i] > A[i+1] > ... > A[A.length - 1]
 



 

示例 1：

输入：[2,1]
输出：false
示例 2：

输入：[3,5,5]
输出：false
示例 3：

输入：[0,3,2,1]
输出：true
 

提示：

0 <= A.length <= 10000
0 <= A[i] <= 10000 

思路：模拟
先判断数组长度小于3返回false（WA点：缺少该判断）
然后判断数组第一项大于等于第二项或者倒数第二项小于等于倒数第一项返回false
遍历数组，当相邻的两个数左大于右时，判断数组后面的是不是递减的，不是返回false
否则返回true即可

执行用时 :
60 ms
, 在所有 C++ 提交中击败了
21.82%
的用户
内存消耗 :
21.3 MB
, 在所有 C++ 提交中击败了
9.52%
的用户
（时间不咋地，空间炸了）

上代码：
class Solution {
public:
    bool flag = false;
    
    bool validMountainArray(vector<int>& A) {
        if(A.size() < 3) return false;
        if(A[0] >= A[1] || A[A.size() - 1] >= A[A.size() - 2]) return false;
        for(int i = 0; i < A.size() - 1; i++) {
            if(A[i] > A[i + 1]) flag = true;
            if(flag && A[i] <= A[i + 1]) return false;
        }
        return true;
    }
};