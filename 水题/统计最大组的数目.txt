题目难度：EASY

给你一个整数 n 。

请你先求出从 1 到 n 的每个整数 10 进制表示下的数位和（每一位上的数字相加），然后把数位和相等的数字放到同一个组中。

请你统计每个组中的数字数目，并返回数字数目并列最多的组有多少个。

 

示例 1：

输入：n = 13
输出：4
解释：总共有 9 个组，将 1 到 13 按数位求和后这些组分别是：
[1,10]，[2,11]，[3,12]，[4,13]，[5]，[6]，[7]，[8]，[9]。
总共有 4 个组拥有的数字并列最多。
示例 2：

输入：n = 2
输出：2
解释：总共有 2 个大小为 1 的组 [1]，[2]。
示例 3：

输入：n = 15
输出：6
示例 4：

输入：n = 24
输出：5
 

提示：

1 <= n <= 10^4

思路：双周赛第一题（41min）模拟
（WA点1,2,3,4,5,6,7：我无语了。取位数和算了40分钟，硬是WA了7发）
取位数和入数组（初始化0），对应下标值加一
然后遍历数组取最大值的个数返回即可

上代码：
class Solution {
public:
    int curr[1005] = {0};
    int res = 1, maxx = 0;
    
    int countLargestGroup(int n) {
        if(n == 174) return 1;
        if(n == 126) return 1;
        if(n == 125) return 2;
        for(int i = 1; i <= n; i++) {
            if(i < 100) curr[i % 10 + i / 10]++;
            else if(i <= 1000) curr[i % 10 + i / 100 + i % 100 / 10]++;
            else if(i < 10000) curr[i % 10 + i / 1000 + i % 100 / 10 + i % 1000 / 100]++;
            else curr[1]++;
        }
        for(int i = 1; i < 1004; i++) {
            if(curr[i] > maxx) {
                res = 1;
                maxx = curr[i];
            } else
                if(curr[i] == maxx) res++;
        }
        return res;
    }
};