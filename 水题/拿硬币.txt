题目难度：EASY

桌上有 n 堆力扣币，每堆的数量保存在数组 coins 中。

我们每次可以选择任意一堆，拿走其中的一枚或者两枚，求拿完所有力扣币的最少次数。

示例 1：

输入：[4,2,1]

输出：4

解释：第一堆力扣币最少需要拿 2 次，第二堆最少需要拿 1 次，第三堆最少需要拿 1 次，总共 4 次即可拿完。

示例 2：

输入：[2,3,10]

输出：8

限制：

1 <= n <= 4
1 <= coins[i] <= 10

思路：力扣春季全国编程大赛第一题，（1min46s）模拟
遍历数组，当前值大于0就减二，结果（初值0）加一
最后返回结果即可

上代码：
class Solution {
public:
    int res = 0;
    
    int minCount(vector<int>& coins) {
        for(int i = 0; i < coins.size(); i++) {
            while(coins[i] > 0) {
                coins[i] -= 2;
                res++;
            }
        }
        return res;
    }
};