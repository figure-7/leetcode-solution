题目难度：EASY
给定一个二叉树，找出其最小深度。

最小深度是从根节点到最近叶子节点的最短路径上的节点数量。

说明: 叶子节点是指没有子节点的节点。

示例:

给定二叉树 [3,9,20,null,null,15,7],

    3
   / \
  9  20
    /  \
   15   7
返回它的最小深度  2.
没啥好说的，遍历更新值就完了
上代码：
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int num = 9999999;
    int minDepth(TreeNode* root) {
        if(!root) {
            return 0;
        }
        int level = 1;
        travel(root,level);
        return num;
    }
    void travel(TreeNode *node,int level) {
        if(node->left) {
            travel(node->left,level+1);
        }
        if(node->right) {
            travel(node->right,level+1);
        }
        if(!node->left && !node->right) {
            num = min(num,level);
            return ;                    //减少程序耗时
        }
    }
};