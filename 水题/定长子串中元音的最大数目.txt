题目难度：MEDIUM

给你字符串 s 和整数 k 。

请返回字符串 s 中长度为 k 的单个子字符串中可能包含的最大元音字母数。

英文中的 元音字母 为（a, e, i, o, u）。

 

示例 1：

输入：s = "abciiidef", k = 3
输出：3
解释：子字符串 "iii" 包含 3 个元音字母。
示例 2：

输入：s = "aeiou", k = 2
输出：2
解释：任意长度为 2 的子字符串都包含 2 个元音字母。
示例 3：

输入：s = "leetcode", k = 3
输出：2
解释："lee"、"eet" 和 "ode" 都包含 2 个元音字母。
示例 4：

输入：s = "rhythms", k = 4
输出：0
解释：字符串 s 中不含任何元音字母。
示例 5：

输入：s = "tryhard", k = 4
输出：1
 

提示：

1 <= s.length <= 10^5
s 由小写英文字母组成
1 <= k <= s.length

思路：周赛第二题，SlidingWindows
先取给定值与数组长度最小值
然后遍历字符串到改最小值累加元音个数，结束后取一下与结果的（初值0）最大值（WA点：缺少此步）
然后从给定值下标开始遍历字符串，统计每个给定值窗口个元音数，然后与结果取最大值给结果
最后返回结果即可

上代码：
class Solution {
public:
    int sum = 0, begin = 0, res = 0;
    
    int maxVowels(string s, int k) {
        int cur = k;
        if(k > s.size()) cur = s.size();
        for(int i = 0; i < cur; i++) if(s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') sum++;
        res = max(res, sum);
        for(int i = k; i < s.size(); i++) {
            if(s[begin] == 'a' || s[begin] == 'e' || s[begin] == 'i' || s[begin] == 'o' || s[begin] == 'u') sum--;
            if(s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') sum++;
            begin++;
            res = max(res, sum);
        }
        return res;
    }
};