题目难度：EASY

「无零整数」是十进制表示中 不含任何 0 的正整数。

给你一个整数 n，请你返回一个 由两个整数组成的列表 [A, B]，满足：

A 和 B 都是无零整数
A + B = n
题目数据保证至少有一个有效的解决方案。

如果存在多个有效解决方案，你可以返回其中任意一个。

 

示例 1：

输入：n = 2
输出：[1,1]
解释：A = 1, B = 1. A + B = n 并且 A 和 B 的十进制表示形式都不包含任何 0 。
示例 2：

输入：n = 11
输出：[2,9]
示例 3：

输入：n = 10000
输出：[1,9999]
示例 4：

输入：n = 69
输出：[1,68]
示例 5：

输入：n = 1010
输出：[11,999]
 

提示：

2 <= n <= 10^4

思路：周赛第一题，模拟
首先对于给定值减去从1开始的值遍历，当减完的数存在0或者减的数存在0时，就把减的数加一，直到都不存在0返回两个数构成的数组即可
注意判断是否存在0的时候除数和余数不要写错，比较绕
（这里判断有无0的思路乱套了，看代码就能看出来，，，所以无脑WA了两发。。。）

上代码：
class Solution {
public:
    int a = 1;
    vector<int> res;
    
    vector<int> getNoZeroIntegers(int n) {
        while(((n - a >= 10 && (n - a) % 10 == 0) || n - a >= 100 && (n - a) / 10 % 10 ==0 || n - a >= 1000 && (n - a) / 100 % 10 ==0 || n - a >= 10000 && (n - a) / 1000 % 10 ==0) || (a >= 10 && a % 10 == 0 || a >= 100 && a / 10 % 10 ==0 || a >= 1000 && a / 100 % 10 ==0 || a >= 10000 && a / 1000 % 10 ==0))
            a++;
        int b = n - a;
        res.push_back(b);
        res.push_back(a);
        return res;
    }
};