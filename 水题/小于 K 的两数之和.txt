题目难度：EASY

给你一个整数数组 A 和一个整数 K，请在该数组中找出两个元素，使它们的和小于 K 但尽可能地接近 K，返回这两个元素的和。

如不存在这样的两个元素，请返回 -1。

 

示例 1：

输入：A = [34,23,1,24,75,33,54,8], K = 60
输出：58
解释：
34 和 24 相加得到 58，58 小于 60，满足题意。
示例 2：

输入：A = [10,20,30], K = 15
输出：-1
解释：
我们无法找到和小于 15 的两个元素。
 

提示：

1 <= A.length <= 100
1 <= A[i] <= 1000
1 <= K <= 2000

思路：把所有种两数之和存到新数组里，然后排序在遍历知道和大于K返回前一个之即可
注意：1.A.size（）等于1返回-1
	2.A【0】>K返回-1

上代码：
class Solution {
public:
    int twoSumLessThanK(vector<int>& A, int K) {
        if(A.size() == 1) {
                return -1;
        }
        vector<int> res;
        for(int i = 0; i < A.size() - 1; i++) {
            for(int j = i + 1; j < A.size(); j++) {
                res.push_back(A[i] + A[j]);
            }
        }
        sort(res.begin(), res.end());
        for(int i = 0; i < res.size(); i++) {
            if(res[0] > K) {
                return -1;
            }
            if(res[i] > K) {
                while(res[i-1] == K) {
                    i = i-1;
                }
                return res[i-1];
            }
        }
        return res[res.size()-1];
    }
};