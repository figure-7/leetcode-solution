题目难度：MEDIUM

给你一个列表 nums ，里面每一个元素都是一个整数列表。

请你依照下面各图的规则，按顺序返回 nums 中对角线上的整数。

 

示例 1：



输入：nums = [[1,2,3],[4,5,6],[7,8,9]]
输出：[1,4,2,7,5,3,8,6,9]
示例 2：



输入：nums = [[1,2,3,4,5],[6,7],[8],[9,10,11],[12,13,14,15,16]]
输出：[1,6,2,8,7,3,9,4,12,10,5,13,11,14,15,16]
示例 3：

输入：nums = [[1,2,3],[4],[5,6,7],[8],[9,10,11]]
输出：[1,4,2,5,3,8,6,9,7,10,11]
示例 4：

输入：nums = [[1,2,3,4,5,6]]
输出：[1,2,3,4,5,6]
 

提示：

1 <= nums.length <= 10^5
1 <= nums[i].length <= 10^5
1 <= nums[i][j] <= 10^9
nums 中最多有 10^5 个数字。

思路：周赛第三题，（1h7min26s）模拟
（WA点，TLE点:套板子改造，炸了......）
开上界空间数组，遍历给定数组，将两下标和作为空间数组一维下标，值存入空间数组中
遍历空间数组，正序一维遍历，逆序二维遍历，将值依次保存进结果数组中
最后返回结果数组即可

上代码：
class Solution {
public:
    vector<int> res;
    
    vector<int> findDiagonalOrder(vector<vector<int>>& nums) {
        vector<vector<int> > curr(200005);
        for(int i = 0; i < nums.size(); i++) for(int j = 0; j < nums[i].size(); j++) curr[i + j].push_back(nums[i][j]);
        for(int i = 0; i < curr.size(); i++) for(int j = curr[i].size() - 1; j >= 0; j--) res.push_back(curr[i][j]);
        return res;
    }
};