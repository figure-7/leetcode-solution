题目难度：EASY

你的朋友正在使用键盘输入他的名字 name。

偶尔，在键入字符 c 时，按键可能会被长按，而字符可能被输入 1 次或多次。

你将会检查键盘输入的字符 typed。

如果它对应的可能是你的朋友的名字（其中一些字符可能被长按），那么就返回 True。

 

示例 1：

输入：name = "alex", typed = "aaleex"
输出：true
解释：'alex' 中的 'a' 和 'e' 被长按。
示例 2：

输入：name = "saeed", typed = "ssaaedd"
输出：false
解释：'e' 一定需要被键入两次，但在 typed 的输出中不是这样。
示例 3：

输入：name = "leelee", typed = "lleeelee"
输出：true
示例 4：

输入：name = "laiden", typed = "laiden"
输出：true
解释：长按名字中的字符并不是必要的。
 

提示：

name.length <= 1000
typed.length <= 1000
name 和 typed 的字符都是小写字母。

思路：模拟
遍历第二个字符串，同时第一个字符串从头开始
当两个字符串对应字符相同时，下标都加一
否则如果第二个字符串等于第一个字符串的上一个位置的字符时（前提是有），就继续（重复字符）
否则直接返回false
最后返回三目元算符，当第一个字符串遍历完了返回true（WA点：缺少此判断），否则返回false即可

执行用时 :
4 ms
, 在所有 C++ 提交中击败了
66.87%
的用户
内存消耗 :
6.3 MB
, 在所有 C++ 提交中击败了
100.00%
的用户
（时间一般，空间完杀！）

上代码：
class Solution {
public:
    int begin = 0;
    
    bool isLongPressedName(string name, string typed) {
        for(int i = 0; i < typed.size(); i++) {
            if(typed[i] == name[begin]) begin++;
            else if(begin - 1 < name.size() && name[begin - 1] == typed[i]) continue;
            else return false;
        }
        return begin == name.size() ? true : false;
    }
};