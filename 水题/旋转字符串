题目难度：EASY

给定两个字符串, s 和 goal。
如果在若干次旋转操作之后，s 能变成 goal ，那么返回 true 。
s 的 旋转操作 就是将 s 最左边的字符移动到最右边。 
例如, 若 s = 'abcde'，在旋转一次之后结果就是'bcdea' 。
示例 1:
输入: s = "abcde", goal = "cdeab"
输出: true
示例 2:
输入: s = "abcde", goal = "abced"
输出: false
提示:
1 <= s.length, goal.length <= 100
s 和 goal 由小写英文字母组成

思路：模拟
遍历其中一个字符串，用另外一个字符串第一个字符与当前遍历字符进行比较
如果相等就截取两端拼接好，如果拼接后的字符串等于另外一个字符串就返回TRUE
否则遍历结束返回FALSE即可

执行用时：
4 ms
, 在所有 C++ 提交中击败了
11.80%
的用户
内存消耗：
6.9 MB
, 在所有 C++ 提交中击败了
7.64%
的用户
（时空都炸了）

上代码：
class Solution {
public:
    bool rotateString(string s, string goal) {
        for(int i = 0; i < goal.size(); i++) {
            string a = goal.substr(0, i), b = goal.substr(i, goal.size() - i);
            string str = b + a;
            if(str == s) return true;
        }
        return false;
    }
};
