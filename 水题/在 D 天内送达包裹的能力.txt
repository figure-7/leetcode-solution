题目难度：MEDIUM

传送带上的包裹必须在 D 天内从一个港口运送到另一个港口。

传送带上的第 i 个包裹的重量为 weights[i]。每一天，我们都会按给出重量的顺序往传送带上装载包裹。我们装载的重量不会超过船的最大运载重量。

返回能在 D 天内将传送带上的所有包裹送达的船的最低运载能力。

 

示例 1：

输入：weights = [1,2,3,4,5,6,7,8,9,10], D = 5
输出：15
解释：
船舶最低载重 15 就能够在 5 天内送达所有包裹，如下所示：
第 1 天：1, 2, 3, 4, 5
第 2 天：6, 7
第 3 天：8
第 4 天：9
第 5 天：10

请注意，货物必须按照给定的顺序装运，因此使用载重能力为 14 的船舶并将包装分成 (2, 3, 4, 5), (1, 6, 7), (8), (9), (10) 是不允许的。 
示例 2：

输入：weights = [3,2,2,4,1,4], D = 3
输出：6
解释：
船舶最低载重 6 就能够在 3 天内送达所有包裹，如下所示：
第 1 天：3, 2
第 2 天：2, 4
第 3 天：1, 4
示例 3：

输入：weights = [1,2,3,1,1], D = 4
输出：3
解释：
第 1 天：1
第 2 天：2
第 3 天：3
第 4 天：1, 1
 

提示：

1 <= D <= weights.length <= 50000
1 <= weights[i] <= 500

思路：模拟
遍历数组找到总重除以天数与最大重量的最大值（最小可能的结果）
然后遍历这个值到总和值（最大结果），内部遍历取能够装得下的最大范围，累计天数
大于给定天数了就break，否则看是否到最后一个结束了，就返回当前外部循环值
最后随便返回个数即可

执行用时 :
168 ms
, 在所有 C++ 提交中击败了
17.82%
的用户
内存消耗 :
27.4 MB
, 在所有 C++ 提交中击败了
9.16%
的用户
（时间不咋地，空间炸了）

上代码：
class Solution {
public:
    int big = 0, cur = 0;
    
    int shipWithinDays(vector<int>& weights, int D) {
        for(int i = 0; i < weights.size(); i++) {
            if(weights[i] > big)
                big = weights[i];
            cur += weights[i];
        }
        big = max(cur / D, big);
        for(int i = big; i <= cur; i++) {
            int curmodtwo = i;
            int day = 1;
            for(int j = 0; j < weights.size(); j++) {
                if(curmodtwo >= weights[j])
                    curmodtwo -= weights[j];
                else {
                    curmodtwo = i;
                    day++;
                    j--;
                }
                if(day > D)
                    break;
                if(j == weights.size() - 1)
                    return i;
            }
        }
        return 0;
    }
};