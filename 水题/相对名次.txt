题目难度：EASY

给你一个长度为 n 的整数数组 score ，其中 score[i] 是第 i 位运动员在比赛中的得分。
所有得分都 互不相同 。
运动员将根据得分 决定名次 ，其中名次第 1 的运动员得分最高，名次第 2 的运动员得分第 2 高，依此类推。
运动员的名次决定了他们的获奖情况：
名次第 1 的运动员获金牌 "Gold Medal" 。
名次第 2 的运动员获银牌 "Silver Medal" 。
名次第 3 的运动员获铜牌 "Bronze Medal" 。
从名次第 4 到第 n 的运动员，只能获得他们的名次编号（即，名次第 x 的运动员获得编号 "x"）。
使用长度为 n 的数组 answer 返回获奖，其中 answer[i] 是第 i 位运动员的获奖情况。
示例 1：
输入：score = [5,4,3,2,1]
输出：["Gold Medal","Silver Medal","Bronze Medal","4","5"]
解释：名次为 [1st, 2nd, 3rd, 4th, 5th] 。
示例 2：
输入：score = [10,3,8,9,4]
输出：["Gold Medal","5","Bronze Medal","Silver Medal","4"]
解释：名次为 [1st, 5th, 3rd, 2nd, 4th] 。
提示：
n == score.length
1 <= n <= 104
0 <= score[i] <= 106
score 中的所有值 互不相同

思路：模拟
继承这个数组并排序继承后的数组，得到的值与下标对应到哈希表里，值为下标
遍历原来的数组，如果哈希表中对应的值为数组长度减一（数组最大值），就把结果数组存入Gold Medal
否则如果哈希表中对应的值为数组长度减二（数组次大值），就把结果数组存入Silver Medal
否则如果哈希表中对应的值为数组长度减三（数组第三大值），就把结果数组存入Bronze Medal
否则就把结果数组长度减去哈希表值（元素第几大）转换为字符串存入Gold Medal
最后返回结果数组即可

执行用时：
20 ms
, 在所有 C++ 提交中击败了
26.13%
的用户
内存消耗：
12.3 MB
, 在所有 C++ 提交中击败了
13.21%
的用户
（时空都不咋地）

上代码：
class Solution {
public:
    unordered_map<int, int> map;
    vector<string> res;

    vector<string> findRelativeRanks(vector<int>& score) {
        vector curr = score;
        sort(curr.begin(), curr.end());
        for(int i = 0; i < curr.size(); i++) map[curr[i]] = i;
        for(int cur : score) {
            if(map[cur] == curr.size() - 1) res.push_back("Gold Medal");
            else if(map[cur] == curr.size() - 2) res.push_back("Silver Medal");
            else if(map[cur] == curr.size() - 3) res.push_back("Bronze Medal");
            else {
                int aim = curr.size() - map[cur];
                string str = to_string(aim);
                res.push_back(str);
            }
        }
        return res;
    }
};