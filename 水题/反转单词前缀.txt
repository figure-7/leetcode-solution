题目难度：EASY

给你一个下标从 0 开始的字符串 word 和一个字符 ch 。
找出 ch 第一次出现的下标 i ，反转 word 中从下标 0 开始、直到下标 i 结束（含下标 i ）的那段字符。
如果 word 中不存在字符 ch ，则无需进行任何操作。
例如，如果 word = "abcdefd" 且 ch = "d" ，那么你应该 反转 从下标 0 开始、直到下标 3 结束（含下标 3 ）。
结果字符串将会是 "dcbaefd" 。
返回 结果字符串 。
示例 1：
输入：word = "abcdefd", ch = "d"
输出："dcbaefd"
解释："d" 第一次出现在下标 3 。 
反转从下标 0 到下标 3（含下标 3）的这段字符，结果字符串是 "dcbaefd" 。
示例 2：
输入：word = "xyxzxe", ch = "z"
输出："zxyxxe"
解释："z" 第一次也是唯一一次出现是在下标 3 。
反转从下标 0 到下标 3（含下标 3）的这段字符，结果字符串是 "zxyxxe" 。
示例 3：
输入：word = "abcd", ch = "z"
输出："abcd"
解释："z" 不存在于 word 中。
无需执行反转操作，结果字符串是 "abcd" 。
提示：
1 <= word.length <= 250
word 由小写英文字母组成
ch 是一个小写英文字母

思路：周赛第一题（4min5s），模拟
遍历字符串
如果当前遍历字符等于给定字符，就分别截取题意中需要调换的字符串以及剩下的字符串
对需要调换的字符串进行调换，然后接上剩下的字符串
返回拼接后的字符串即可
否则遍历结束返回给定字符串即可

上代码：
class Solution {
public:
    string reversePrefix(string word, char ch) {
        for(int i = 0; i < word.size(); i++) {
            if(word[i] == ch) {
                string s = word.substr(0, i + 1), ss = word.substr(i + 1, word.size() - i - 1);
                reverse(s.begin(), s.end());
                s += ss;
                return s;
            }
        }
        return word;
    }
};