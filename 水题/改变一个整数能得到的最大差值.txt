题目难度：MEDIUM

给你一个整数 num 。

你可以对它进行如下步骤恰好 两次 ：

选择一个数字 x (0 <= x <= 9).
选择另一个数字 y (0 <= y <= 9) 。
数字 y 可以等于 x 。
将 num 中所有出现 x 的数位都用 y 替换。
得到的新的整数 不能 有前导 0 ，得到的新整数也 不能 是 0 。
令两次对 num 的操作得到的结果分别为 a 和 b 。

请你返回 a 和 b 的 最大差值 。

 

示例 1：

输入：num = 555
输出：888
解释：第一次选择 x = 5 且 y = 9 ，并把得到的新数字保存在 a 中。
第二次选择 x = 5 且 y = 1 ，并把得到的新数字保存在 b 中。
现在，我们有 a = 999 和 b = 111 ，最大差值为 888
示例 2：

输入：num = 9
输出：8
解释：第一次选择 x = 9 且 y = 9 ，并把得到的新数字保存在 a 中。
第二次选择 x = 9 且 y = 1 ，并把得到的新数字保存在 b 中。
现在，我们有 a = 9 和 b = 1 ，最大差值为 8
示例 3：

输入：num = 123456
输出：820000
示例 4：

输入：num = 10000
输出：80000
示例 5：

输入：num = 9288
输出：8700
 

提示：

1 <= num <= 10^8

思路：双周赛第二题，模拟
先将给定数转换为字符串，然后遍历字符串
遇见不是'9'的字符就记录并把字符串中所有该字符变为'9'，然后转换为数字类型作为大值
然后如果第一个字符不是'1'时，记录该字符并把字符串中所有该字符变为'1',然后转换为数字类型作为小值
否则向后找到第一个不是'0'且不是'1'的字符（WA点：没有判断不能是'1'（没有前缀0））
记录该字符并把字符串中所有该字符变为'1',然后转换为数字类型作为小值
最后返回大值减去小值即可

上代码：
class Solution {
public:
    string big = "", xiao = "";
    
    int maxDiff(int num) {
        string s = to_string(num);
        for(int i = 0; i < s.size(); i++) {
            if(s[i] != '9') {
                char c = s[i];
                big += '9';
                for(int j = i + 1; j < s.size(); j++) {
                    if(s[j] == c) big += '9';
                    else big += s[j];
                }
                break;
            } else big += s[i];
        }
        if(s[0] != '1') {
            char c = s[0];
            for(int j = 0; j < s.size(); j++) {
                if(s[j] == c) xiao += '1';
                else xiao += s[j];
            }
        }
        else {
            xiao += s[0];
            for(int i = 1; i < s.size(); i++) {
                if(s[i] != '0' && s[i] != '1') {
                    char c = s[i];
                    xiao += '0';
                    for(int j = i + 1; j < s.size(); j++) {
                        if(s[j] == c) xiao += '0';
                        else xiao += s[j];
                    }
                    break;
                } else xiao += s[i];
            }
        }
        int bigint = stoi(big), xiaoint = stoi(xiao);
        return bigint - xiaoint;
    }
};
