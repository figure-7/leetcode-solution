题目难度：EASY

给定一个 N 叉树，找到其最大深度。

最大深度是指从根节点到最远叶子节点的最长路径上的节点总数。

例如，给定一个 3叉树 :

 



 

我们应返回其最大深度，3。

说明:

树的深度不会超过 1000。
树的节点总不会超过 5000。

思路：树+DFS
（刚刚做完层序遍历，直接套代码删点就完了，这个更简单，2分钟题）
直接删掉不需要的，返回长度即可

执行用时 :
44 ms
, 在所有 C++ 提交中击败了
93.07%
的用户
内存消耗 :
11.2 MB
, 在所有 C++ 提交中击败了
100.00%
的用户
（时间绝杀，空间完杀！！！）

上代码：
/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    int res = 0;
    
    void DFS(Node* node, int level) {
        res = max(res, level);
        if(node == nullptr) return ;
        vector<Node*> nodes;
        nodes.insert(nodes.begin(), node->children.begin(), node->children.end());
        for(int i = 0; i < nodes.size(); i++) DFS(nodes[i], level + 1);
    }

    int maxDepth(Node* root) {
        DFS(root, 0);
        return root == nullptr ? 0 : res + 1;
    }
};