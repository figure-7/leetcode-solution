题目难度：EASY

给定一个整数 n，返回 n! 结果尾数中零的数量。

示例 1:

输入: 3
输出: 0
解释: 3! = 6, 尾数中没有零。
示例 2:

输入: 5
输出: 1
解释: 5! = 120, 尾数中有 1 个零.
说明: 你算法的时间复杂度应为 O(log n) 。

思路：看是5和它的阶层的多少倍，倍数累计即可（这不是找规律吗）
去掉你的垃圾算法，这款算法时间O(1)，速度非常快，快来这里用新算法吧

执行用时 :
4 ms
, 在所有 C++ 提交中击败了
92.02%
的用户
内存消耗 :
8 MB
, 在所有 C++ 提交中击败了
98.29%
的用户
(厉不厉害~)

上代码：
class Solution {
public:
    int trailingZeroes(int n) {
        return n/5 + n/25 + n/125 + n/625 + n/3125 + n/15625 + n/78125 + n/390625 + n/1953125 + n/9765625 + n/48828125 + n/244140625 + n/1220703125;
    }
};