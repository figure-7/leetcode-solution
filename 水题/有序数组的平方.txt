题目难度：EASY

给定一个按非递减顺序排序的整数数组 A，返回每个数字的平方组成的新数组，要求也按非递减顺序排序。

 

示例 1：

输入：[-4,-1,0,3,10]
输出：[0,1,9,16,100]
示例 2：

输入：[-7,-3,2,3,11]
输出：[4,9,9,49,121]
 

提示：

1 <= A.length <= 10000
-10000 <= A[i] <= 10000
A 已按非递减顺序排序。

思路：模拟
直接遍历数组去平方给每个数值然后排序
最后返回数组即可（一分钟题，水！）

执行用时 :
56 ms
, 在所有 C++ 提交中击败了
65.92%
的用户
内存消耗 :
26.6 MB
, 在所有 C++ 提交中击败了
5.48%
的用户
（时间一般，空间炸了,原地...）

上代码：
class Solution {
public:
    vector<int> sortedSquares(vector<int>& A) {
        for(int i = 0; i < A.size(); i++)
            A[i] *= A[i];
        sort(A.begin(), A.end());
        return A;
    }
};