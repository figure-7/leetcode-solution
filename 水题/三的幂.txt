题目难度：EASY

给定一个整数，写一个函数来判断它是否是 3 的幂次方。

示例 1:

输入: 27
输出: true
示例 2:

输入: 0
输出: false
示例 3:

输入: 9
输出: true
示例 4:

输入: 45
输出: false
进阶：
你能不使用循环或者递归来完成本题吗？

思路1：进阶的话，if else应该可以.......,
再有就是下面的算法，只要能被最大的用例整余就ok
上代码：
class Solution {
public:
    bool isPowerOfThree(int n) {
        return n > 0 && 1162261467%n == 0;
    }
};

思路2：没啥说的，注意下0和负数
上代码：
class Solution {
public:
    bool isPowerOfThree(int n) {
        if(n<=0) {
            return false;
        }
        if(n==1) {
            return true;
        }
        int size = 0;
        vector<int> arr;
        for(double i = 3; i < 100000000000000; i = i*3) {
            arr.push_back(i);
            size++;
        }
        for(int j = 0; j < size; j++){
            if(arr[j]==n) {
                return true;
            }
        }
        return false;
    }
};