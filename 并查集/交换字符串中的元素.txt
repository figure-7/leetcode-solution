题目难度：MEDIUM

给你一个字符串 s，以及该字符串中的一些「索引对」数组 pairs，其中 pairs[i] = [a, b] 表示字符串中的两个索引（编号从 0 开始）。

你可以 任意多次交换 在 pairs 中任意一对索引处的字符。

返回在经过若干次交换后，s 可以变成的按字典序最小的字符串。

 

示例 1:

输入：s = "dcab", pairs = [[0,3],[1,2]]
输出："bacd"
解释： 
交换 s[0] 和 s[3], s = "bcad"
交换 s[1] 和 s[2], s = "bacd"
示例 2：

输入：s = "dcab", pairs = [[0,3],[1,2],[0,2]]
输出："abcd"
解释：
交换 s[0] 和 s[3], s = "bcad"
交换 s[0] 和 s[2], s = "acbd"
交换 s[1] 和 s[2], s = "abcd"
示例 3：

输入：s = "cba", pairs = [[0,1],[1,2]]
输出："abc"
解释：
交换 s[0] 和 s[1], s = "bca"
交换 s[1] 和 s[2], s = "bac"
交换 s[0] 和 s[1], s = "abc"
 

提示：

1 <= s.length <= 10^5
0 <= pairs.length <= 10^5
0 <= pairs[i][0], pairs[i][1] < s.length
s 中只含有小写英文字母

思路：用到了并查集（将每个数组的对应字符连通），先上模板，然后改造
之后只需要将字符串中每个字符下标值对应在连通块中的位置记录，取该连通块的最小字符替换即可
然后该连通块该字符数目减一，如此遍历即可

上代码：
const int MAXN=1e5+50;
int fa[MAXN], siz[MAXN][26];
int getFather(int x){
    return fa[x]=(fa[x]==x?x:getFather(fa[x]));
}
inline void mergeFather(int x, int y){
    int fx=getFather(x), fy=getFather(y);
    if (fx==fy) return;
    if (fx>fy) swap(fx, fy);
    fa[fx]=fy;
    for (int i=0; i<26; i++){
        siz[fy][i]+=siz[fx][i];
        siz[fx][i]=0;
    }
}
class Solution {
public:
    string smallestStringWithSwaps(string s, vector<vector<int>>& pairs) {
        int n=s.length(), m=pairs.size();
        for (int i=0; i<n; i++){
            fa[i]=i;
            memset(siz[i], 0, sizeof(siz[i]));
            ++siz[i][s[i]-'a'];
        }
        
        for (int i=0; i<m; i++){
            int a=pairs[i][0], b=pairs[i][1];
            mergeFather(a, b);
        }
        
        for (int i=0; i<n; i++){
            int x=getFather(i);
            for (int j=0; j<26; j++){
                if (siz[x][j]>0){
                    s[i]=(char)('a'+j);
                    --siz[x][j];
                    break;
                }
            }
        }
        
        return s;
    }
};