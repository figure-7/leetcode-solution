题目难度：MEDIUM

思路：二叉搜索树+栈
首先我用那个的预处理但是是O(N)空间过的，时间很快但是空间不符合要求，接下来上题解区思路：
二叉搜索树的中序遍历序列是单调递增的。 
利用二叉树的迭代方式的中序遍历，保存左子链，从而使用O(h)的内存。

执行用时 :
76 ms
, 在所有 C++ 提交中击败了
28.10%
的用户
内存消耗 :
24.3 MB
, 在所有 C++ 提交中击败了
78.97%
的用户
（时间很慢，空间不错，但都是符合题意的）

上代码：
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class BSTIterator {
private:
    vector<TreeNode*> S;
public:
    BSTIterator(TreeNode* root){
        while(root){
            S.push_back(root);
            root = root->left;
        }
    }
    int next() {
        TreeNode* t = S.back();
        S.pop_back();
        int val = t->val;
        t = t->right;
        while(t){
            S.push_back(t);
            t = t->left;
        }
        return val;
    }
    bool hasNext() {
        return !S.empty();
    }
};
/**
 * Your BSTIterator object will be instantiated and called as such:
 * BSTIterator* obj = new BSTIterator(root);
 * int param_1 = obj->next();
 * bool param_2 = obj->hasNext();
 */