题目难度：EASY
给定一个二叉树，找出其最大深度。

二叉树的深度为根节点到最远叶子节点的最长路径上的节点数。

说明: 叶子节点是指没有子节点的节点。

示例：
给定二叉树 [3,9,20,null,null,15,7]，

    3
   / \
  9  20
    /  \
   15   7
返回它的最大深度 3 。
第一次做，上代码：
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int num=0;
    int maxDepth(TreeNode* root) {
        if(!root) {
            return 0;
        }
        traval(root,1);
        return num;
    }
    void traval(TreeNode *node, int level) {
        if(node->left) {
            traval(node->left,level+1);
        }
        if(node->right) {               //注意这里不能用else判断，因为递归
            traval(node->right,level+1);//不能被全部执行
        }
        if(!node->left && !node->right){
            num = max(num,level);
            return ;			//减少程序耗时
        }
    }
};