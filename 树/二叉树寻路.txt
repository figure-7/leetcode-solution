题目难度：EASY

在一棵无限的二叉树上，每个节点都有两个子节点，树中的节点 逐行 依次按 “之” 字形进行标记。

如下图所示，在奇数行（即，第一行、第三行、第五行……）中，按从左到右的顺序进行标记；

而偶数行（即，第二行、第四行、第六行……）中，按从右到左的顺序进行标记。



给你树上某一个节点的标号 label，请你返回从根节点到该标号为 label 节点的路径，该路径是由途经的节点标号所组成的。

 

示例 1：

输入：label = 14
输出：[1,3,4,14]
示例 2：

输入：label = 26
输出：[1,2,6,10,26]
 

提示：

1 <= label <= 10^6

思路：实现方法看代码，说不清思路，但是事实就是那么算能算出来，，，我太笨了~
主要用一个表，从后向前遍历依次放入表中，然后翻转即可，（这个我想到了，但是不造咋算。。。）
以下是java版代码，易懂；

上代码：
class Solution {
    public List<Integer> pathInZigZagTree(int label) {
        List<Integer> result = new ArrayList<Integer>();
        int level = 1;
        int end = 1;
        while (label > end) {
            level++;
            end = (int)Math.pow(2, level) -1;
        }
        int value = label;
        while (level > 1) {
            result.add(value);
            int start = (int)Math.pow(2, level - 1);
            int group = (value - start) / 2;
            System.out.println(start);
            System.out.println(group);
            level--;
            group = (int)Math.pow(2, level - 1) - group;
            value = (int)Math.pow(2, level - 1) + group - 1;
        }
        result.add(1);
        Collections.reverse(result);
        return result;
    }
}