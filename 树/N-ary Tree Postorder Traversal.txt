题目难度：EASY

给定一个 N 叉树，返回其节点值的后序遍历。

例如，给定一个 3叉树 :

 



 

返回其后序遍历: [5,6,3,2,4,1].

 

说明: 递归法很简单，你可以使用迭代法完成此题吗?

思路：N叉树
（刚写完先序，这个还不会。。。）接下来上题解思路：
标记是否访问过该节点

执行用时 :
108 ms
, 在所有 C++ 提交中击败了
68.46%
的用户
内存消耗 :
57 MB
, 在所有 C++ 提交中击败了
12.50%
的用户
（时间一般，空间炸了。。。）

上代码：
/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/
class Solution {
public:
    vector<int> postorder(Node* root) {
        vector<int> res;
        int gray = 1;
        int white = 0;
        stack<pair<int, Node*>> tmp;
        tmp.push(make_pair(white, root));
        if(!root) return res;
        while(!tmp.empty()){
            Node* cur = tmp.top().second;
            int color = tmp.top().first;
            int n = (cur->children).size();
            if (n > 0 && color == white){
                tmp.pop();
                tmp.push(make_pair(gray, cur));
                for(int i = n-1; i >= 0; i--){
                    tmp.push(make_pair(white, cur->children[i]));
                }
            }else{
                res.push_back(cur->val);
                tmp.pop();
            }
        }                                                                                                                
        return res;
    }
};